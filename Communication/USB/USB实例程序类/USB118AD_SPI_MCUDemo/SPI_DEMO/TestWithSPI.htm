<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [E:\My Production\Dataie\USB118A_D\Tester Code\Use SPI\TestWithSPI.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image E:\My Production\Dataie\USB118A_D\Tester Code\Use SPI\TestWithSPI.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT3.0 [Build 951]: Last Updated: Fri Sep 12 17:44:04 2008
<BR><P>
<H3>Maximum Stack Usage =        336 bytes + Unknown(Functions without stacksize,Cycles,Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main -> DoTest2 -> __0sprintf -> _printf_char_common -> __printf -> _printf_int_dec -> _printf_int_common<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[b48228]">Reset_Handler</a>
 <LI><a href="#[1071da8]">__scatterload</a>
 <LI><a href="#[1071cd8]">__scatterload_rt2</a>
 <LI><a href="#[1071d28]">__scatterload_null</a>
 <LI><a href="#[10717f4]">__scatterload_copy</a>
 <LI><a href="#[10713a4]">__scatterload_zeroinit</a>
 <LI><a href="#[b480a8]">__user_initial_stackheap</a>
 <LI><a href="#[ffcbac]">_memcpy_lastbytes</a>
 <LI><a href="#[ffc5b4]">_memcpy_lastbytes_aligned</a>
 <LI><a href="#[1080b54]">__ARM_call_via_r0</a>
 <LI><a href="#[1080bd4]">__call_via_r0</a>
 <LI><a href="#[1080a88]">__ARM_call_via_r1</a>
 <LI><a href="#[1080ad8]">__call_via_r1</a>
 <LI><a href="#[10809bc]">__ARM_call_via_r2</a>
 <LI><a href="#[1080a0c]">__call_via_r2</a>
 <LI><a href="#[10808f0]">__ARM_call_via_r3</a>
 <LI><a href="#[1080940]">__call_via_r3</a>
 <LI><a href="#[10807f4]">__ARM_call_via_r4</a>
 <LI><a href="#[1080874]">__call_via_r4</a>
 <LI><a href="#[10806f8]">__ARM_call_via_r5</a>
 <LI><a href="#[1080778]">__call_via_r5</a>
 <LI><a href="#[10805fc]">__ARM_call_via_r6</a>
 <LI><a href="#[108067c]">__call_via_r6</a>
 <LI><a href="#[1080500]">__ARM_call_via_r7</a>
 <LI><a href="#[1080580]">__call_via_r7</a>
 <LI><a href="#[107cba8]">__fplib_config_pureend_doubles</a>
 <LI><a href="#[b48890]">Undef_Handler</a>
 <LI><a href="#[b48818]">SWI_Handler</a>
 <LI><a href="#[b4879c]">PAbt_Handler</a>
 <LI><a href="#[b48720]">DAbt_Handler</a>
 <LI><a href="#[b486a8]">IRQ_Handler</a>
 <LI><a href="#[b48630]">FIQ_Handler</a>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3><UL>
 <LI><a href="#[b48890]">Undef_Handler</a>&nbsp;&nbsp;&nbsp;->&nbsp;&nbsp;&nbsp;<a href="#[b48890]">Undef_Handler</a><BR>
 <LI><a href="#[b48818]">SWI_Handler</a>&nbsp;&nbsp;&nbsp;->&nbsp;&nbsp;&nbsp;<a href="#[b48818]">SWI_Handler</a><BR>
 <LI><a href="#[b4879c]">PAbt_Handler</a>&nbsp;&nbsp;&nbsp;->&nbsp;&nbsp;&nbsp;<a href="#[b4879c]">PAbt_Handler</a><BR>
 <LI><a href="#[b48720]">DAbt_Handler</a>&nbsp;&nbsp;&nbsp;->&nbsp;&nbsp;&nbsp;<a href="#[b48720]">DAbt_Handler</a><BR>
 <LI><a href="#[b486a8]">IRQ_Handler</a>&nbsp;&nbsp;&nbsp;->&nbsp;&nbsp;&nbsp;<a href="#[b486a8]">IRQ_Handler</a><BR>
 <LI><a href="#[b48630]">FIQ_Handler</a>&nbsp;&nbsp;&nbsp;->&nbsp;&nbsp;&nbsp;<a href="#[b48630]">FIQ_Handler</a><BR>
</UL>
<BR>
<P><STRONG><a name="[b48228]"></a>Reset_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[ffb280]"></a>__main</STRONG> (ARM, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __main -> __rt_entry -> __rt_lib_init -> _fp_init</UL>
<BR>[Calls]<UL><LI><a href="#[ffa8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[1071da8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1071da8]"></a>__scatterload</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[ffb280]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[1071cd8]"></a>__scatterload_rt2</STRONG> (ARM, 48 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ffa8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[1071d28]"></a>__scatterload_null</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[10717f4]"></a>__scatterload_copy</STRONG> (ARM, 40 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10717f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[10717f4]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[10713a4]"></a>__scatterload_zeroinit</STRONG> (ARM, 44 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[ff204c]"></a>__ARM_argv_veneer</STRONG> (ARM, 16 bytes, Stack size 0 bytes, lib_init.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[ff1f80]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[b480a8]"></a>__user_initial_stackheap</STRONG> (ARM, 0 bytes, Stack size unknown bytes, startup.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ff9f60]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[b45714]"></a>IRQ_Timer0</STRONG> (ARM, 236 bytes, Stack size 40 bytes, clockunit.o(.text), UNUSED)

<P><STRONG><a name="[b4569c]"></a>CLK_Init</STRONG> (ARM, 148 bytes, Stack size 8 bytes, clockunit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLK_Init -> IRQ_SetInt</UL>
<BR>[Calls]<UL><LI><a href="#[b454b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_SetInt
</UL>
<BR>[Called By]<UL><LI><a href="#[be6aa0]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b45620]"></a>CLK_SetupTimer</STRONG> (ARM, 76 bytes, Stack size 4 bytes, clockunit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = CLK_SetupTimer</UL>
<BR>[Called By]<UL><LI><a href="#[b45530]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CLK_Delay
<LI><a href="#[be6aa0]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[bf121c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>

<P><STRONG><a name="[b455a8]"></a>CLK_OnTimer</STRONG> (ARM, 132 bytes, Stack size 8 bytes, clockunit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLK_OnTimer</UL>
<BR>[Called By]<UL><LI><a href="#[b45530]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CLK_Delay
<LI><a href="#[bf121c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>

<P><STRONG><a name="[b45530]"></a>CLK_Delay</STRONG> (ARM, 56 bytes, Stack size 12 bytes, clockunit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CLK_Delay -> CLK_OnTimer</UL>
<BR>[Calls]<UL><LI><a href="#[b455a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_OnTimer
<LI><a href="#[b45620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetupTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[be6b14]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest2
<LI><a href="#[be6b88]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest1
</UL>

<P><STRONG><a name="[bf1298]"></a>CMD_Init</STRONG> (ARM, 76 bytes, Stack size 16 bytes, command_unit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CMD_Init</UL>
<BR>[Calls]<UL><LI><a href="#[bf0a6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[be6aa0]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bf121c]"></a>CMD_DoCommand</STRONG> (ARM, 224 bytes, Stack size 24 bytes, command_unit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CMD_DoCommand -> CLK_OnTimer</UL>
<BR>[Calls]<UL><LI><a href="#[b455a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_OnTimer
<LI><a href="#[b45620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetupTimer
<LI><a href="#[bf0978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_StartRead
<LI><a href="#[bf09f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send
<LI><a href="#[bf0ae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_GetReadCounter
<LI><a href="#[bf0b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CanSendNextPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[bf0be8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_GetCapacity
<LI><a href="#[bf0c64]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_Remove
<LI><a href="#[bf0cdc]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_MakeDir
<LI><a href="#[bf0d54]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_RootDir
<LI><a href="#[bf0dcc]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_OutDir
<LI><a href="#[bf0e44]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_InDir
<LI><a href="#[bf0ebc]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_GetVersion
<LI><a href="#[bf0f38]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_Detect
<LI><a href="#[bf0fb0]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_SetPointer
<LI><a href="#[bf102c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_OpenFile
<LI><a href="#[bf10a8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_CreateFile
<LI><a href="#[bf1124]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_ReadFile
<LI><a href="#[bf11a0]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_WriteFile
</UL>

<P><STRONG><a name="[bf11a0]"></a>CMD_WriteFile</STRONG> (ARM, 148 bytes, Stack size 8 bytes, command_unit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CMD_WriteFile -> CMD_DoCommand -> CLK_OnTimer</UL>
<BR>[Calls]<UL><LI><a href="#[bf121c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[be6b14]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest2
<LI><a href="#[be6b88]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest1
</UL>

<P><STRONG><a name="[bf1124]"></a>CMD_ReadFile</STRONG> (ARM, 228 bytes, Stack size 16 bytes, command_unit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bf0ae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_GetReadCounter
<LI><a href="#[bf121c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[be6b88]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest1
</UL>

<P><STRONG><a name="[bf10a8]"></a>CMD_CreateFile</STRONG> (ARM, 448 bytes, Stack size 24 bytes, command_unit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CMD_CreateFile -> CMD_DoCommand -> CLK_OnTimer</UL>
<BR>[Calls]<UL><LI><a href="#[bf121c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
<LI><a href="#[ffbfe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[be6b14]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest2
<LI><a href="#[be6b88]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest1
</UL>

<P><STRONG><a name="[bf102c]"></a>CMD_OpenFile</STRONG> (ARM, 204 bytes, Stack size 16 bytes, command_unit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CMD_OpenFile -> CMD_DoCommand -> CLK_OnTimer</UL>
<BR>[Calls]<UL><LI><a href="#[bf121c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[be6b14]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest2
<LI><a href="#[be6b88]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest1
</UL>

<P><STRONG><a name="[bf0fb0]"></a>CMD_SetPointer</STRONG> (ARM, 184 bytes, Stack size 8 bytes, command_unit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bf121c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>

<P><STRONG><a name="[bf0f38]"></a>CMD_Detect</STRONG> (ARM, 148 bytes, Stack size 8 bytes, command_unit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CMD_Detect -> CMD_DoCommand -> CLK_OnTimer</UL>
<BR>[Calls]<UL><LI><a href="#[bf121c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[be6aa0]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bf0ebc]"></a>CMD_GetVersion</STRONG> (ARM, 152 bytes, Stack size 8 bytes, command_unit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CMD_GetVersion -> CMD_DoCommand -> CLK_OnTimer</UL>
<BR>[Calls]<UL><LI><a href="#[bf121c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[be6aa0]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bf0e44]"></a>CMD_InDir</STRONG> (ARM, 156 bytes, Stack size 16 bytes, command_unit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bf121c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>

<P><STRONG><a name="[bf0dcc]"></a>CMD_OutDir</STRONG> (ARM, 112 bytes, Stack size 8 bytes, command_unit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bf121c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>

<P><STRONG><a name="[bf0d54]"></a>CMD_RootDir</STRONG> (ARM, 112 bytes, Stack size 8 bytes, command_unit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CMD_RootDir -> CMD_DoCommand -> CLK_OnTimer</UL>
<BR>[Calls]<UL><LI><a href="#[bf121c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[be6b14]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest2
<LI><a href="#[be6b88]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest1
</UL>

<P><STRONG><a name="[bf0cdc]"></a>CMD_MakeDir</STRONG> (ARM, 392 bytes, Stack size 16 bytes, command_unit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CMD_MakeDir -> CMD_DoCommand -> CLK_OnTimer</UL>
<BR>[Calls]<UL><LI><a href="#[bf121c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
<LI><a href="#[ffbfe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[be6b14]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest2
<LI><a href="#[be6b88]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest1
</UL>

<P><STRONG><a name="[bf0c64]"></a>CMD_Remove</STRONG> (ARM, 204 bytes, Stack size 16 bytes, command_unit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bf121c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>

<P><STRONG><a name="[bf0be8]"></a>CMD_GetCapacity</STRONG> (ARM, 272 bytes, Stack size 16 bytes, command_unit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bf121c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>

<P><STRONG><a name="[b454b8]"></a>IRQ_SetInt</STRONG> (ARM, 104 bytes, Stack size 8 bytes, irq_unit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ_SetInt</UL>
<BR>[Called By]<UL><LI><a href="#[b4569c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CLK_Init
</UL>

<P><STRONG><a name="[bea574]"></a>IRQ_Enable</STRONG> (ARM, 32 bytes, Stack size 0 bytes, irq_unit.o(.text), UNUSED)

<P><STRONG><a name="[bea4fc]"></a>IRQ_Disable</STRONG> (ARM, 32 bytes, Stack size 0 bytes, irq_unit.o(.text), UNUSED)

<P><STRONG><a name="[be6c78]"></a>Init_IO</STRONG> (ARM, 40 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be6aa0]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[be6bfc]"></a>Main_BlinkLED</STRONG> (ARM, 84 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[be6b88]"></a>DoTest1</STRONG> (ARM, 292 bytes, Stack size 48 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b45530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_Delay
<LI><a href="#[bf0cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_MakeDir
<LI><a href="#[bf0d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_RootDir
<LI><a href="#[bf102c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_OpenFile
<LI><a href="#[bf10a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CreateFile
<LI><a href="#[bf1124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_ReadFile
<LI><a href="#[bf11a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_WriteFile
<LI><a href="#[ffc4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[ffcb5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[ffd018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>

<P><STRONG><a name="[be6b14]"></a>DoTest2</STRONG> (ARM, 400 bytes, Stack size 40 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = DoTest2 -> __0sprintf -> _printf_char_common -> __printf -> _printf_int_dec -> _printf_int_common</UL>
<BR>[Calls]<UL><LI><a href="#[b45530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_Delay
<LI><a href="#[bf0cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_MakeDir
<LI><a href="#[bf0d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_RootDir
<LI><a href="#[bf102c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_OpenFile
<LI><a href="#[bf10a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CreateFile
<LI><a href="#[bf11a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_WriteFile
<LI><a href="#[ffd56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[be6aa0]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[be6aa0]"></a>main</STRONG> (ARM, 172 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = main -> DoTest2 -> __0sprintf -> _printf_char_common -> __printf -> _printf_int_dec -> _printf_int_common</UL>
<BR>[Calls]<UL><LI><a href="#[b45620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetupTimer
<LI><a href="#[b4569c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_Init
<LI><a href="#[be6b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoTest2
<LI><a href="#[be6c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_IO
<LI><a href="#[bf0ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_GetVersion
<LI><a href="#[bf0f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_Detect
<LI><a href="#[bf1298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kernel.o(.text)
</UL>
<P><STRONG><a name="[bfd218]"></a>SPI_Handler</STRONG> (ARM, 68 bytes, Stack size 12 bytes, spi_unit.o(.text), UNUSED)

<P><STRONG><a name="[bf0a6c]"></a>SPI_Init</STRONG> (ARM, 112 bytes, Stack size 0 bytes, spi_unit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bf1298]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_Init
</UL>

<P><STRONG><a name="[bf09f4]"></a>SPI_Send</STRONG> (ARM, 64 bytes, Stack size 0 bytes, spi_unit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bf121c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>

<P><STRONG><a name="[bf0b64]"></a>SPI_CanSendNextPacket</STRONG> (ARM, 8 bytes, Stack size 0 bytes, spi_unit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bf121c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>

<P><STRONG><a name="[bf0978]"></a>SPI_StartRead</STRONG> (ARM, 80 bytes, Stack size 0 bytes, spi_unit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bf121c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>

<P><STRONG><a name="[bf0ae4]"></a>SPI_GetReadCounter</STRONG> (ARM, 244 bytes, Stack size 0 bytes, spi_unit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bf1124]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_ReadFile
<LI><a href="#[bf121c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>

<P><STRONG><a name="[bfd19c]"></a>SPI_CancelRead</STRONG> (ARM, 24 bytes, Stack size 0 bytes, spi_unit.o(.text), UNUSED)

<P><STRONG><a name="[ffdc28]"></a>_printf_int_dec</STRONG> (Thumb, 98 bytes, Stack size 72 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _printf_int_dec -> _printf_int_common</UL>
<BR>[Calls]<UL><LI><a href="#[ff7744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10 (via Veneer)
<LI><a href="#[ff8728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[ffda24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned (Weak Reference)
<LI><a href="#[ffdaac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[ff6790]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[ffd56c]"></a>__0sprintf</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, __0sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = __0sprintf -> _printf_char_common -> __printf -> _printf_int_dec -> _printf_int_common</UL>
<BR>[Calls]<UL><LI><a href="#[ff7b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[ff80d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[be6b14]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest2 (via Veneer)
</UL>

<P><STRONG><a name="[ffd018]"></a>memcmp</STRONG> (Thumb, 86 bytes, Stack size 4 bytes, memcmp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[be6b88]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest1 (via Veneer)
</UL>

<P><STRONG><a name="[ffcb5c]"></a>__aeabi_memcpy</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[be6b88]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest1
</UL>

<P><STRONG><a name="[ffcae4]"></a>__rt_memcpy</STRONG> (ARM, 212 bytes, Stack size 0 bytes, rt_memcpy.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ffc4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[ffcbac]"></a>_memcpy_lastbytes</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memcpy.o(.text), UNUSED)

<P><STRONG><a name="[ffc4e8]"></a>__aeabi_memcpy4</STRONG> (ARM, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[be6b88]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest1
<LI><a href="#[ffcae4]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[ffc538]"></a>__aeabi_memcpy8</STRONG> (ARM, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[ffc46c]"></a>__rt_memcpy_w</STRONG> (ARM, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[ffc5b4]"></a>_memcpy_lastbytes_aligned</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[ffbfe4]"></a>__aeabi_uwrite4</STRONG> (ARM, 0 bytes, Stack size 0 bytes, uwrite4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bf0cdc]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_MakeDir
<LI><a href="#[bf10a8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_CreateFile
</UL>

<P><STRONG><a name="[ffbf68]"></a>__rt_uwrite4</STRONG> (ARM, 32 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[ffb9c0]"></a>__use_two_region_memory</STRONG> (ARM, 4 bytes, Stack size 0 bytes, stkheap2.o(.text), UNUSED)

<P><STRONG><a name="[ffb938]"></a>__rt_stackheap_init</STRONG> (ARM, 60 bytes, Stack size 24 bytes, stkheap2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = __rt_stackheap_init -> __user_setup_stackheap</UL>
<BR>[Calls]<UL><LI><a href="#[ff945c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_stackheap_storage
<LI><a href="#[ff9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[ffa8e0]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[ffb8b0]"></a>__rt_heap_extend</STRONG> (ARM, 24 bytes, Stack size 8 bytes, stkheap2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ffba94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_heap_extend (Weak Reference)
</UL>

<P><STRONG><a name="[ffa8e0]"></a>__rt_entry</STRONG> (ARM, 76 bytes, Stack size 16 bytes, kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_entry -> __rt_lib_init -> _fp_init</UL>
<BR>[Calls]<UL><LI><a href="#[ff02f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_platform_post_lib_init
<LI><a href="#[ff0748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_platform_post_stackheap_init
<LI><a href="#[ff1f80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
<LI><a href="#[ff508c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via BX)
<LI><a href="#[ffb938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_stackheap_init
</UL>
<BR>[Called By]<UL><LI><a href="#[ffb280]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[1071cd8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[ffa798]"></a>__rt_exit</STRONG> (ARM, 20 bytes, Stack size 8 bytes, kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __rt_exit -> __rt_lib_shutdown</UL>
<BR>[Calls]<UL><LI><a href="#[ff1f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[ff508c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;exit (via Veneer)
</UL>

<P><STRONG><a name="[ffa720]"></a>__rt_abort</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kernel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ff7348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[ff9f60]"></a>__user_setup_stackheap</STRONG> (ARM, 96 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap</UL>
<BR>[Calls]<UL><LI><a href="#[b480a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[ff6e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[ffb938]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_stackheap_init
</UL>

<P><STRONG><a name="[ff945c]"></a>__rt_stackheap_storage</STRONG> (ARM, 12 bytes, Stack size 0 bytes, rt_stackheap_storage_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ffb938]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_stackheap_init
</UL>

<P><STRONG><a name="[ff8728]"></a>_printf_int_common</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_int_common</UL>
<BR>[Calls]<UL><LI><a href="#[ff85a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding (Weak Reference)
<LI><a href="#[ff8624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding (Weak Reference)
<LI><a href="#[10809bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[ffdc28]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[ff80d8]"></a>_printf_char_common</STRONG> (Thumb, 44 bytes, Stack size 88 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = _printf_char_common -> __printf -> _printf_int_dec -> _printf_int_common</UL>
<BR>[Calls]<UL><LI><a href="#[ff6790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ffd56c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>

<P><STRONG><a name="[ff7b28]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ffd56c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> __0sprintf.o(.text)
</UL>
<P><STRONG><a name="[ff7744]"></a>__rt_udiv10</STRONG> (ARM, 44 bytes, Stack size 0 bytes, rtudiv10.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ffdc28]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec (via Veneer)
</UL>

<P><STRONG><a name="[ff7348]"></a>_sys_exit</STRONG> (ARM, 20 bytes, Stack size 0 bytes, sys_exit.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ffa720]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_abort
</UL>

<P><STRONG><a name="[ff6d44]"></a>__user_libspace</STRONG> (ARM, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[ff6e6c]"></a>__user_perproc_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ff9f60]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[ff6de4]"></a>__user_perthread_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[ff6790]"></a>__printf</STRONG> (Thumb, 740 bytes, Stack size 48 bytes, __printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = __printf -> _printf_int_dec -> _printf_int_common</UL>
<BR>[Calls]<UL><LI><a href="#[ff6124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb (Weak Reference)
<LI><a href="#[ff61a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wc (Weak Reference)
<LI><a href="#[ff6218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str (Weak Reference)
<LI><a href="#[ff6290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_mbtowc (Weak Reference)
<LI><a href="#[ff630c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct (Weak Reference)
<LI><a href="#[ff6390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex (Weak Reference)
<LI><a href="#[ff6414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec (Weak Reference)
<LI><a href="#[ff6498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex (Weak Reference)
<LI><a href="#[ff6514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec (Weak Reference)
<LI><a href="#[ff6590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_charcount (Weak Reference)
<LI><a href="#[ff6610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_stackcheck (Weak Reference)
<LI><a href="#[ffdc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
<LI><a href="#[10808f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
<LI><a href="#[10809bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
<LI><a href="#[1080a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r1
</UL>
<BR>[Called By]<UL><LI><a href="#[ff80d8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[ff5864]"></a>_printf_outstr_char</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, _printf_outstr_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = _printf_outstr_char</UL>
<BR>[Calls]<UL><LI><a href="#[10809bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[ff5468]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_input_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[ff508c]"></a>exit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = exit -> __rt_exit -> __rt_lib_shutdown</UL>
<BR>[Calls]<UL><LI><a href="#[ff4fbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
<LI><a href="#[ff6610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_stackcheck (Weak Reference)
<LI><a href="#[ffa798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[ffa8e0]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[ff1f80]"></a>__rt_lib_init</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, lib_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __rt_lib_init -> _fp_init</UL>
<BR>[Calls]<UL><LI><a href="#[ff1500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_signal_init (Weak Reference)
<LI><a href="#[ff157c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init (Weak Reference)
<LI><a href="#[ff15f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_initio (Weak Reference)
<LI><a href="#[ff1668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_user_alloc (Weak Reference)
<LI><a href="#[ff16e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc (Weak Reference)
<LI><a href="#[ff1760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_getenv_init (Weak Reference)
<LI><a href="#[ff17dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_time (Weak Reference)
<LI><a href="#[ff1858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric (Weak Reference)
<LI><a href="#[ff18d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_monetary (Weak Reference)
<LI><a href="#[ff1954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype (Weak Reference)
<LI><a href="#[ff19d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_collate (Weak Reference)
<LI><a href="#[ff1a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_trap_init (Weak Reference)
<LI><a href="#[ff1ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_clock_init (Weak Reference)
<LI><a href="#[ff1b40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_atexit_init (Weak Reference)
<LI><a href="#[ff1c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_ (Weak Reference)
<LI><a href="#[ff1cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__alloca_initialize (Weak Reference)
<LI><a href="#[ff1d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_DescSize (Weak Reference)
<LI><a href="#[ff1dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_exceptions_init (Weak Reference)
<LI><a href="#[ff204c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_argv_veneer (via Veneer)
<LI><a href="#[ff6610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_stackcheck (Weak Reference)
<LI><a href="#[107ccb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init (via Veneer)
<LI><a href="#[107f2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[ffa8e0]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_entry (via Veneer)
</UL>

<P><STRONG><a name="[ff1f30]"></a>__rt_lib_shutdown</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lib_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_lib_shutdown</UL>
<BR>[Calls]<UL><LI><a href="#[ff1400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminateio (Weak Reference)
<LI><a href="#[ff147c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminate_user_alloc (Weak Reference)
<LI><a href="#[ff1bbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize (Weak Reference)
<LI><a href="#[ff6610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_stackcheck (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[ffa798]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_exit (via Veneer)
</UL>

<P><STRONG><a name="[ff0748]"></a>_platform_post_stackheap_init</STRONG> (ARM, 12 bytes, Stack size 0 bytes, boardinit2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ffa8e0]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[ff02f4]"></a>_platform_post_lib_init</STRONG> (ARM, 16 bytes, Stack size 8 bytes, boardinit3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _platform_post_lib_init</UL>
<BR>[Called By]<UL><LI><a href="#[ffa8e0]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[1080b54]"></a>__ARM_call_via_r0</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[1080bd4]"></a>__call_via_r0</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[1080a88]"></a>__ARM_call_via_r1</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ff6790]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[1080ad8]"></a>__call_via_r1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[10809bc]"></a>__ARM_call_via_r2</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ff5864]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;_printf_outstr_char
<LI><a href="#[ff6790]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf
<LI><a href="#[ff8728]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[1080a0c]"></a>__call_via_r2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[10808f0]"></a>__ARM_call_via_r3</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ff6790]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[1080940]"></a>__call_via_r3</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[10807f4]"></a>__ARM_call_via_r4</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[1080874]"></a>__call_via_r4</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[10806f8]"></a>__ARM_call_via_r5</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[1080778]"></a>__call_via_r5</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[10805fc]"></a>__ARM_call_via_r6</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[108067c]"></a>__call_via_r6</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[1080500]"></a>__ARM_call_via_r7</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[1080580]"></a>__call_via_r7</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[1080198]"></a>__I_use_semihosting</STRONG> (ARM, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sys_exit.o(.text)
</UL>
<P><STRONG><a name="[1080110]"></a>__use_no_semihosting_swi</STRONG> (ARM, 4 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[107f2e4]"></a>__rt_locale</STRONG> (ARM, 12 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ff1f80]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[107d14c]"></a>__ARM_get_argv</STRONG> (Thumb, 6 bytes, Stack size 4 bytes, no_argv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __ARM_get_argv</UL>
<BR>[Address Reference Count : 1]<UL><LI> lib_init.o(.emb_text)
</UL>
<P><STRONG><a name="[107bd30]"></a>__rt_fp_status_addr</STRONG> (ARM, 12 bytes, Stack size 0 bytes, rt_fp_status_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[107ccb4]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[107ccb4]"></a>_fp_init</STRONG> (ARM, 24 bytes, Stack size 8 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _fp_init</UL>
<BR>[Calls]<UL><LI><a href="#[107bd30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_fp_status_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[ff1f80]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[107cba8]"></a>__fplib_config_pureend_doubles</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[b48890]"></a>Undef_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[b48890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b48890]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[b48818]"></a>SWI_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[b48818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b48818]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[b4879c]"></a>PAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[b4879c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b4879c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[b48720]"></a>DAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[b48720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b48720]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[b486a8]"></a>IRQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[b486a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b486a8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[b48630]"></a>FIQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[b48630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b48630]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[ff1dbc]"></a>__ARM_exceptions_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff1f80]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[ff6610]"></a>__ARM_stackcheck</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff1f30]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (Weak Reference)
<LI><a href="#[ff1f80]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
<LI><a href="#[ff508c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;exit (Weak Reference)
<LI><a href="#[ff6790]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[ff1d40]"></a>__Heap_DescSize</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff1f80]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[ff1cc0]"></a>__alloca_initialize</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff1f80]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[ff1c38]"></a>__cpp_initialize__aeabi_</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff1f80]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[ff1bbc]"></a>__cxa_finalize</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff1f30]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (Weak Reference)
</UL>

<P><STRONG><a name="[ffba94]"></a>__user_heap_extend</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ffb8b0]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_extend (Weak Reference)
</UL>

<P><STRONG><a name="[ff1b40]"></a>_atexit_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff1f80]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[ff4fbc]"></a>_call_atexit_fns</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff508c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;exit (Weak Reference)
</UL>

<P><STRONG><a name="[ff1ac8]"></a>_clock_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff1f80]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[ff1a4c]"></a>_fp_trap_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff1f80]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[ff19d0]"></a>_get_lc_collate</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff1f80]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[ff1954]"></a>_get_lc_ctype</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff1f80]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[ff18d4]"></a>_get_lc_monetary</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff1f80]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[ff1858]"></a>_get_lc_numeric</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff1f80]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[ff17dc]"></a>_get_lc_time</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff1f80]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[ff1760]"></a>_getenv_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff1f80]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[ff16e8]"></a>_init_alloc</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff1f80]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[ff1668]"></a>_init_user_alloc</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff1f80]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[ff15f4]"></a>_initio</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff1f80]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[ff6590]"></a>_printf_charcount</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff6790]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[ff6514]"></a>_printf_fp_dec</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff6790]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[ff6498]"></a>_printf_fp_hex</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff6790]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[ff6414]"></a>_printf_longlong_dec</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff6790]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[ff6390]"></a>_printf_longlong_hex</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff6790]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[ff630c]"></a>_printf_longlong_oct</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff6790]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[ff6290]"></a>_printf_mbtowc</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff6790]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[ff8624]"></a>_printf_post_padding</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff8728]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common (Weak Reference)
</UL>

<P><STRONG><a name="[ff85a4]"></a>_printf_pre_padding</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff8728]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common (Weak Reference)
</UL>

<P><STRONG><a name="[ff6218]"></a>_printf_str</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff6790]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[ffdaac]"></a>_printf_truncate_signed</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ffdc28]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec (Weak Reference)
</UL>

<P><STRONG><a name="[ffda24]"></a>_printf_truncate_unsigned</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ffdc28]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec (Weak Reference)
</UL>

<P><STRONG><a name="[ff61a0]"></a>_printf_wc</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff6790]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[ff6124]"></a>_printf_wctomb</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff6790]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[ff157c]"></a>_rand_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff1f80]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[ff1500]"></a>_signal_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff1f80]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[ff147c]"></a>_terminate_user_alloc</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff1f30]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (Weak Reference)
</UL>

<P><STRONG><a name="[ff1400]"></a>_terminateio</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[ff1f30]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (Weak Reference)
</UL>
<HR></body></html>
