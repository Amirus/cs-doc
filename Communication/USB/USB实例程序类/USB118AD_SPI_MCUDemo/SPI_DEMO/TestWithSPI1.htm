<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [E:\Peter08\Project08\USB08\USB118\DOC08\ARM∂¡U≈Ã\hxy080905\KHL080917\USB118A_D080916\Tester Code\Use SPI\TestWithSPI1.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image E:\Peter08\Project08\USB08\USB118\DOC08\ARM∂¡U≈Ã\hxy080905\KHL080917\USB118A_D080916\Tester Code\Use SPI\TestWithSPI1.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT3.0 [Build 951]: Last Updated: Wed Sep 17 09:16:03 2008
<BR><P>
<H3>Maximum Stack Usage =        336 bytes + Unknown(Functions without stacksize,Cycles,Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main -> DoTest2 -> __0sprintf -> _printf_char_common -> __printf -> _printf_int_dec -> _printf_int_common<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[15d81b4]">Reset_Handler</a>
 <LI><a href="#[2794f50]">__scatterload</a>
 <LI><a href="#[2794e80]">__scatterload_rt2</a>
 <LI><a href="#[2794ed0]">__scatterload_null</a>
 <LI><a href="#[279499c]">__scatterload_copy</a>
 <LI><a href="#[279454c]">__scatterload_zeroinit</a>
 <LI><a href="#[15d8034]">__user_initial_stackheap</a>
 <LI><a href="#[27502e4]">_memcpy_lastbytes</a>
 <LI><a href="#[274fcec]">_memcpy_lastbytes_aligned</a>
 <LI><a href="#[2743210]">__ARM_call_via_r0</a>
 <LI><a href="#[2743290]">__call_via_r0</a>
 <LI><a href="#[2743144]">__ARM_call_via_r1</a>
 <LI><a href="#[2743194]">__call_via_r1</a>
 <LI><a href="#[2743078]">__ARM_call_via_r2</a>
 <LI><a href="#[27430c8]">__call_via_r2</a>
 <LI><a href="#[2742fac]">__ARM_call_via_r3</a>
 <LI><a href="#[2742ffc]">__call_via_r3</a>
 <LI><a href="#[2742eb0]">__ARM_call_via_r4</a>
 <LI><a href="#[2742f30]">__call_via_r4</a>
 <LI><a href="#[2742db4]">__ARM_call_via_r5</a>
 <LI><a href="#[2742e34]">__call_via_r5</a>
 <LI><a href="#[2742cb8]">__ARM_call_via_r6</a>
 <LI><a href="#[2742d38]">__call_via_r6</a>
 <LI><a href="#[2742bbc]">__ARM_call_via_r7</a>
 <LI><a href="#[2742c3c]">__call_via_r7</a>
 <LI><a href="#[279fd28]">__fplib_config_pureend_doubles</a>
 <LI><a href="#[15d881c]">Undef_Handler</a>
 <LI><a href="#[15d87a4]">SWI_Handler</a>
 <LI><a href="#[15d8728]">PAbt_Handler</a>
 <LI><a href="#[15d86ac]">DAbt_Handler</a>
 <LI><a href="#[15d8634]">IRQ_Handler</a>
 <LI><a href="#[15d85bc]">FIQ_Handler</a>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3><UL>
 <LI><a href="#[15d881c]">Undef_Handler</a>&nbsp;&nbsp;&nbsp;->&nbsp;&nbsp;&nbsp;<a href="#[15d881c]">Undef_Handler</a><BR>
 <LI><a href="#[15d87a4]">SWI_Handler</a>&nbsp;&nbsp;&nbsp;->&nbsp;&nbsp;&nbsp;<a href="#[15d87a4]">SWI_Handler</a><BR>
 <LI><a href="#[15d8728]">PAbt_Handler</a>&nbsp;&nbsp;&nbsp;->&nbsp;&nbsp;&nbsp;<a href="#[15d8728]">PAbt_Handler</a><BR>
 <LI><a href="#[15d86ac]">DAbt_Handler</a>&nbsp;&nbsp;&nbsp;->&nbsp;&nbsp;&nbsp;<a href="#[15d86ac]">DAbt_Handler</a><BR>
 <LI><a href="#[15d8634]">IRQ_Handler</a>&nbsp;&nbsp;&nbsp;->&nbsp;&nbsp;&nbsp;<a href="#[15d8634]">IRQ_Handler</a><BR>
 <LI><a href="#[15d85bc]">FIQ_Handler</a>&nbsp;&nbsp;&nbsp;->&nbsp;&nbsp;&nbsp;<a href="#[15d85bc]">FIQ_Handler</a><BR>
</UL>
<BR>
<P><STRONG><a name="[15d81b4]"></a>Reset_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[274e9b8]"></a>__main</STRONG> (ARM, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __main -> __rt_entry -> __rt_lib_init -> _fp_init</UL>
<BR>[Calls]<UL><LI><a href="#[274e018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[2794f50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2794f50]"></a>__scatterload</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[274e9b8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[2794e80]"></a>__scatterload_rt2</STRONG> (ARM, 48 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[274e018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[2794ed0]"></a>__scatterload_null</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[279499c]"></a>__scatterload_copy</STRONG> (ARM, 40 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[279499c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[279499c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[279454c]"></a>__scatterload_zeroinit</STRONG> (ARM, 44 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[2745784]"></a>__ARM_argv_veneer</STRONG> (ARM, 16 bytes, Stack size 0 bytes, lib_init.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[27456b8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[15d8034]"></a>__user_initial_stackheap</STRONG> (ARM, 0 bytes, Stack size unknown bytes, startup.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[274d698]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[15d5638]"></a>IRQ_Timer0</STRONG> (ARM, 236 bytes, Stack size 40 bytes, clockunit.o(.text), UNUSED)

<P><STRONG><a name="[15d55c0]"></a>CLK_Init</STRONG> (ARM, 148 bytes, Stack size 8 bytes, clockunit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLK_Init -> IRQ_SetInt</UL>
<BR>[Calls]<UL><LI><a href="#[15d53dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_SetInt
</UL>
<BR>[Called By]<UL><LI><a href="#[15d290c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15d5544]"></a>CLK_SetupTimer</STRONG> (ARM, 76 bytes, Stack size 4 bytes, clockunit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = CLK_SetupTimer</UL>
<BR>[Called By]<UL><LI><a href="#[15d290c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[15d5454]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CLK_Delay
<LI><a href="#[167deb4]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>

<P><STRONG><a name="[15d54cc]"></a>CLK_OnTimer</STRONG> (ARM, 132 bytes, Stack size 8 bytes, clockunit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLK_OnTimer</UL>
<BR>[Called By]<UL><LI><a href="#[15d5454]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CLK_Delay
<LI><a href="#[167deb4]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>

<P><STRONG><a name="[15d5454]"></a>CLK_Delay</STRONG> (ARM, 56 bytes, Stack size 12 bytes, clockunit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CLK_Delay -> CLK_OnTimer</UL>
<BR>[Calls]<UL><LI><a href="#[15d54cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_OnTimer
<LI><a href="#[15d5544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetupTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[15d2980]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest2
<LI><a href="#[15d29f4]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest1
</UL>

<P><STRONG><a name="[167df30]"></a>CMD_Init</STRONG> (ARM, 76 bytes, Stack size 16 bytes, command_unit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CMD_Init</UL>
<BR>[Calls]<UL><LI><a href="#[167d704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[15d290c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[167deb4]"></a>CMD_DoCommand</STRONG> (ARM, 224 bytes, Stack size 24 bytes, command_unit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CMD_DoCommand -> CLK_OnTimer</UL>
<BR>[Calls]<UL><LI><a href="#[15d54cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_OnTimer
<LI><a href="#[15d5544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetupTimer
<LI><a href="#[167d610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_StartRead
<LI><a href="#[167d68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send
<LI><a href="#[167d77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_GetReadCounter
<LI><a href="#[167d7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CanSendNextPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[167d880]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_GetCapacity
<LI><a href="#[167d8fc]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_Remove
<LI><a href="#[167d974]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_MakeDir
<LI><a href="#[167d9ec]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_RootDir
<LI><a href="#[167da64]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_OutDir
<LI><a href="#[167dadc]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_InDir
<LI><a href="#[167db54]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_GetVersion
<LI><a href="#[167dbd0]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_Detect
<LI><a href="#[167dc48]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_SetPointer
<LI><a href="#[167dcc4]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_OpenFile
<LI><a href="#[167dd40]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_CreateFile
<LI><a href="#[167ddbc]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_ReadFile
<LI><a href="#[167de38]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_WriteFile
</UL>

<P><STRONG><a name="[167de38]"></a>CMD_WriteFile</STRONG> (ARM, 148 bytes, Stack size 8 bytes, command_unit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CMD_WriteFile -> CMD_DoCommand -> CLK_OnTimer</UL>
<BR>[Calls]<UL><LI><a href="#[167deb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[15d2980]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest2
<LI><a href="#[15d29f4]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest1
</UL>

<P><STRONG><a name="[167ddbc]"></a>CMD_ReadFile</STRONG> (ARM, 228 bytes, Stack size 16 bytes, command_unit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[167d77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_GetReadCounter
<LI><a href="#[167deb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[15d29f4]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest1
</UL>

<P><STRONG><a name="[167dd40]"></a>CMD_CreateFile</STRONG> (ARM, 448 bytes, Stack size 24 bytes, command_unit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CMD_CreateFile -> CMD_DoCommand -> CLK_OnTimer</UL>
<BR>[Calls]<UL><LI><a href="#[167deb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
<LI><a href="#[274f71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[15d2980]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest2
<LI><a href="#[15d29f4]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest1
</UL>

<P><STRONG><a name="[167dcc4]"></a>CMD_OpenFile</STRONG> (ARM, 204 bytes, Stack size 16 bytes, command_unit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CMD_OpenFile -> CMD_DoCommand -> CLK_OnTimer</UL>
<BR>[Calls]<UL><LI><a href="#[167deb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[15d2980]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest2
<LI><a href="#[15d29f4]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest1
</UL>

<P><STRONG><a name="[167dc48]"></a>CMD_SetPointer</STRONG> (ARM, 184 bytes, Stack size 8 bytes, command_unit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[167deb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>

<P><STRONG><a name="[167dbd0]"></a>CMD_Detect</STRONG> (ARM, 148 bytes, Stack size 8 bytes, command_unit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CMD_Detect -> CMD_DoCommand -> CLK_OnTimer</UL>
<BR>[Calls]<UL><LI><a href="#[167deb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[15d290c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[167db54]"></a>CMD_GetVersion</STRONG> (ARM, 152 bytes, Stack size 8 bytes, command_unit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CMD_GetVersion -> CMD_DoCommand -> CLK_OnTimer</UL>
<BR>[Calls]<UL><LI><a href="#[167deb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[15d290c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[167dadc]"></a>CMD_InDir</STRONG> (ARM, 156 bytes, Stack size 16 bytes, command_unit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[167deb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>

<P><STRONG><a name="[167da64]"></a>CMD_OutDir</STRONG> (ARM, 112 bytes, Stack size 8 bytes, command_unit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[167deb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>

<P><STRONG><a name="[167d9ec]"></a>CMD_RootDir</STRONG> (ARM, 112 bytes, Stack size 8 bytes, command_unit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CMD_RootDir -> CMD_DoCommand -> CLK_OnTimer</UL>
<BR>[Calls]<UL><LI><a href="#[167deb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[15d2980]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest2
<LI><a href="#[15d29f4]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest1
</UL>

<P><STRONG><a name="[167d974]"></a>CMD_MakeDir</STRONG> (ARM, 392 bytes, Stack size 16 bytes, command_unit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CMD_MakeDir -> CMD_DoCommand -> CLK_OnTimer</UL>
<BR>[Calls]<UL><LI><a href="#[167deb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
<LI><a href="#[274f71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[15d2980]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest2
<LI><a href="#[15d29f4]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest1
</UL>

<P><STRONG><a name="[167d8fc]"></a>CMD_Remove</STRONG> (ARM, 204 bytes, Stack size 16 bytes, command_unit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[167deb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>

<P><STRONG><a name="[167d880]"></a>CMD_GetCapacity</STRONG> (ARM, 272 bytes, Stack size 16 bytes, command_unit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[167deb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>

<P><STRONG><a name="[15d53dc]"></a>IRQ_SetInt</STRONG> (ARM, 104 bytes, Stack size 8 bytes, irq_unit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ_SetInt</UL>
<BR>[Called By]<UL><LI><a href="#[15d55c0]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CLK_Init
</UL>

<P><STRONG><a name="[1677108]"></a>IRQ_Enable</STRONG> (ARM, 32 bytes, Stack size 0 bytes, irq_unit.o(.text), UNUSED)

<P><STRONG><a name="[1677090]"></a>IRQ_Disable</STRONG> (ARM, 32 bytes, Stack size 0 bytes, irq_unit.o(.text), UNUSED)

<P><STRONG><a name="[15d2ae4]"></a>Init_IO</STRONG> (ARM, 40 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15d290c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15d2a68]"></a>Main_BlinkLED</STRONG> (ARM, 84 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[15d29f4]"></a>DoTest1</STRONG> (ARM, 292 bytes, Stack size 48 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15d5454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_Delay
<LI><a href="#[167d974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_MakeDir
<LI><a href="#[167d9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_RootDir
<LI><a href="#[167dcc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_OpenFile
<LI><a href="#[167dd40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CreateFile
<LI><a href="#[167ddbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_ReadFile
<LI><a href="#[167de38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_WriteFile
<LI><a href="#[16b603c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[274fc20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2750294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[15d2980]"></a>DoTest2</STRONG> (ARM, 400 bytes, Stack size 40 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = DoTest2 -> __0sprintf -> _printf_char_common -> __printf -> _printf_int_dec -> _printf_int_common</UL>
<BR>[Calls]<UL><LI><a href="#[15d5454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_Delay
<LI><a href="#[167d974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_MakeDir
<LI><a href="#[167d9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_RootDir
<LI><a href="#[167dcc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_OpenFile
<LI><a href="#[167dd40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CreateFile
<LI><a href="#[167de38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_WriteFile
<LI><a href="#[16b6590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15d290c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15d290c]"></a>main</STRONG> (ARM, 172 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = main -> DoTest2 -> __0sprintf -> _printf_char_common -> __printf -> _printf_int_dec -> _printf_int_common</UL>
<BR>[Calls]<UL><LI><a href="#[15d2980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoTest2
<LI><a href="#[15d2ae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_IO
<LI><a href="#[15d5544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetupTimer
<LI><a href="#[15d55c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_Init
<LI><a href="#[167db54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_GetVersion
<LI><a href="#[167dbd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_Detect
<LI><a href="#[167df30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kernel.o(.text)
</UL>
<P><STRONG><a name="[16911c4]"></a>SPI_Handler</STRONG> (ARM, 68 bytes, Stack size 12 bytes, spi_unit.o(.text), UNUSED)

<P><STRONG><a name="[167d704]"></a>SPI_Init</STRONG> (ARM, 112 bytes, Stack size 0 bytes, spi_unit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[167df30]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_Init
</UL>

<P><STRONG><a name="[167d68c]"></a>SPI_Send</STRONG> (ARM, 64 bytes, Stack size 0 bytes, spi_unit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[167deb4]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>

<P><STRONG><a name="[167d7fc]"></a>SPI_CanSendNextPacket</STRONG> (ARM, 8 bytes, Stack size 0 bytes, spi_unit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[167deb4]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>

<P><STRONG><a name="[167d610]"></a>SPI_StartRead</STRONG> (ARM, 80 bytes, Stack size 0 bytes, spi_unit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[167deb4]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>

<P><STRONG><a name="[167d77c]"></a>SPI_GetReadCounter</STRONG> (ARM, 244 bytes, Stack size 0 bytes, spi_unit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[167ddbc]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_ReadFile
<LI><a href="#[167deb4]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_DoCommand
</UL>

<P><STRONG><a name="[1691148]"></a>SPI_CancelRead</STRONG> (ARM, 24 bytes, Stack size 0 bytes, spi_unit.o(.text), UNUSED)

<P><STRONG><a name="[16b6c4c]"></a>_printf_int_dec</STRONG> (Thumb, 98 bytes, Stack size 72 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _printf_int_dec -> _printf_int_common</UL>
<BR>[Calls]<UL><LI><a href="#[16b6a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned (Weak Reference)
<LI><a href="#[16b6ad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed (Weak Reference)
<LI><a href="#[274ae7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10 (via Veneer)
<LI><a href="#[274be60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[2749ec8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[16b6590]"></a>__0sprintf</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, __0sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = __0sprintf -> _printf_char_common -> __printf -> _printf_int_dec -> _printf_int_common</UL>
<BR>[Calls]<UL><LI><a href="#[274b260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[274b810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[15d2980]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest2 (via Veneer)
</UL>

<P><STRONG><a name="[16b603c]"></a>memcmp</STRONG> (Thumb, 86 bytes, Stack size 4 bytes, memcmp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[15d29f4]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest1 (via Veneer)
</UL>

<P><STRONG><a name="[2750294]"></a>__aeabi_memcpy</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[15d29f4]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest1
</UL>

<P><STRONG><a name="[275021c]"></a>__rt_memcpy</STRONG> (ARM, 212 bytes, Stack size 0 bytes, rt_memcpy.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[274fc20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[27502e4]"></a>_memcpy_lastbytes</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memcpy.o(.text), UNUSED)

<P><STRONG><a name="[274fc20]"></a>__aeabi_memcpy4</STRONG> (ARM, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[15d29f4]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DoTest1
<LI><a href="#[275021c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[274fc70]"></a>__aeabi_memcpy8</STRONG> (ARM, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[274fba4]"></a>__rt_memcpy_w</STRONG> (ARM, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[274fcec]"></a>_memcpy_lastbytes_aligned</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[274f71c]"></a>__aeabi_uwrite4</STRONG> (ARM, 0 bytes, Stack size 0 bytes, uwrite4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[167d974]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_MakeDir
<LI><a href="#[167dd40]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;CMD_CreateFile
</UL>

<P><STRONG><a name="[274f6a0]"></a>__rt_uwrite4</STRONG> (ARM, 32 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[274f0f8]"></a>__use_two_region_memory</STRONG> (ARM, 4 bytes, Stack size 0 bytes, stkheap2.o(.text), UNUSED)

<P><STRONG><a name="[274f070]"></a>__rt_stackheap_init</STRONG> (ARM, 60 bytes, Stack size 24 bytes, stkheap2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = __rt_stackheap_init -> __user_setup_stackheap</UL>
<BR>[Calls]<UL><LI><a href="#[274cb94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_stackheap_storage
<LI><a href="#[274d698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[274e018]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[274efe8]"></a>__rt_heap_extend</STRONG> (ARM, 24 bytes, Stack size 8 bytes, stkheap2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[274f1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_heap_extend (Weak Reference)
</UL>

<P><STRONG><a name="[274e018]"></a>__rt_entry</STRONG> (ARM, 76 bytes, Stack size 16 bytes, kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_entry -> __rt_lib_init -> _fp_init</UL>
<BR>[Calls]<UL><LI><a href="#[2743a2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_platform_post_lib_init
<LI><a href="#[2743e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_platform_post_stackheap_init
<LI><a href="#[27456b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
<LI><a href="#[27487c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via BX)
<LI><a href="#[274f070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_stackheap_init
</UL>
<BR>[Called By]<UL><LI><a href="#[274e9b8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[2794e80]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[274ded0]"></a>__rt_exit</STRONG> (ARM, 20 bytes, Stack size 8 bytes, kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __rt_exit -> __rt_lib_shutdown</UL>
<BR>[Calls]<UL><LI><a href="#[2745668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[27487c4]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;exit (via Veneer)
</UL>

<P><STRONG><a name="[274de58]"></a>__rt_abort</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kernel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[274aa80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[274d698]"></a>__user_setup_stackheap</STRONG> (ARM, 96 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap</UL>
<BR>[Calls]<UL><LI><a href="#[15d8034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[274a5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[274f070]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_stackheap_init
</UL>

<P><STRONG><a name="[274cb94]"></a>__rt_stackheap_storage</STRONG> (ARM, 12 bytes, Stack size 0 bytes, rt_stackheap_storage_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[274f070]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_stackheap_init
</UL>

<P><STRONG><a name="[274be60]"></a>_printf_int_common</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_int_common</UL>
<BR>[Calls]<UL><LI><a href="#[2743078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
<LI><a href="#[274bcdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding (Weak Reference)
<LI><a href="#[274bd5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[16b6c4c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[274b810]"></a>_printf_char_common</STRONG> (Thumb, 44 bytes, Stack size 88 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = _printf_char_common -> __printf -> _printf_int_dec -> _printf_int_common</UL>
<BR>[Calls]<UL><LI><a href="#[2749ec8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[16b6590]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>

<P><STRONG><a name="[274b260]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16b6590]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> __0sprintf.o(.text)
</UL>
<P><STRONG><a name="[274ae7c]"></a>__rt_udiv10</STRONG> (ARM, 44 bytes, Stack size 0 bytes, rtudiv10.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16b6c4c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec (via Veneer)
</UL>

<P><STRONG><a name="[274aa80]"></a>_sys_exit</STRONG> (ARM, 20 bytes, Stack size 0 bytes, sys_exit.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[274de58]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_abort
</UL>

<P><STRONG><a name="[274a47c]"></a>__user_libspace</STRONG> (ARM, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[274a5a4]"></a>__user_perproc_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[274d698]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[274a51c]"></a>__user_perthread_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[2749ec8]"></a>__printf</STRONG> (Thumb, 740 bytes, Stack size 48 bytes, __printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = __printf -> _printf_int_dec -> _printf_int_common</UL>
<BR>[Calls]<UL><LI><a href="#[16b6c4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
<LI><a href="#[2742fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
<LI><a href="#[2743078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
<LI><a href="#[2743144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r1
<LI><a href="#[274985c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb (Weak Reference)
<LI><a href="#[27498d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wc (Weak Reference)
<LI><a href="#[2749950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str (Weak Reference)
<LI><a href="#[27499c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_mbtowc (Weak Reference)
<LI><a href="#[2749a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct (Weak Reference)
<LI><a href="#[2749ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex (Weak Reference)
<LI><a href="#[2749b4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec (Weak Reference)
<LI><a href="#[2749bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex (Weak Reference)
<LI><a href="#[2749c4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec (Weak Reference)
<LI><a href="#[2749cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_charcount (Weak Reference)
<LI><a href="#[2749d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_stackcheck (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[274b810]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[2748f9c]"></a>_printf_outstr_char</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, _printf_outstr_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = _printf_outstr_char</UL>
<BR>[Calls]<UL><LI><a href="#[2743078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[2748ba0]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_input_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[27487c4]"></a>exit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = exit -> __rt_exit -> __rt_lib_shutdown</UL>
<BR>[Calls]<UL><LI><a href="#[27486f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
<LI><a href="#[2749d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_stackcheck (Weak Reference)
<LI><a href="#[274ded0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[274e018]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[27456b8]"></a>__rt_lib_init</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, lib_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __rt_lib_init -> _fp_init</UL>
<BR>[Calls]<UL><LI><a href="#[27419a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale (via Veneer)
<LI><a href="#[2744c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_signal_init (Weak Reference)
<LI><a href="#[2744cb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init (Weak Reference)
<LI><a href="#[2744d2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_initio (Weak Reference)
<LI><a href="#[2744da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_user_alloc (Weak Reference)
<LI><a href="#[2744e20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc (Weak Reference)
<LI><a href="#[2744e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_getenv_init (Weak Reference)
<LI><a href="#[2744f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_time (Weak Reference)
<LI><a href="#[2744f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric (Weak Reference)
<LI><a href="#[274500c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_monetary (Weak Reference)
<LI><a href="#[274508c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype (Weak Reference)
<LI><a href="#[2745108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_collate (Weak Reference)
<LI><a href="#[2745184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_trap_init (Weak Reference)
<LI><a href="#[2745200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_clock_init (Weak Reference)
<LI><a href="#[2745278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_atexit_init (Weak Reference)
<LI><a href="#[2745370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_ (Weak Reference)
<LI><a href="#[27453f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__alloca_initialize (Weak Reference)
<LI><a href="#[2745478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_DescSize (Weak Reference)
<LI><a href="#[27454f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_exceptions_init (Weak Reference)
<LI><a href="#[2745784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_argv_veneer (via Veneer)
<LI><a href="#[2749d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_stackcheck (Weak Reference)
<LI><a href="#[279fe34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[274e018]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_entry (via Veneer)
</UL>

<P><STRONG><a name="[2745668]"></a>__rt_lib_shutdown</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lib_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_lib_shutdown</UL>
<BR>[Calls]<UL><LI><a href="#[2744b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminateio (Weak Reference)
<LI><a href="#[2744bb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminate_user_alloc (Weak Reference)
<LI><a href="#[27452f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize (Weak Reference)
<LI><a href="#[2749d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_stackcheck (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[274ded0]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_exit (via Veneer)
</UL>

<P><STRONG><a name="[2743e80]"></a>_platform_post_stackheap_init</STRONG> (ARM, 12 bytes, Stack size 0 bytes, boardinit2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[274e018]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[2743a2c]"></a>_platform_post_lib_init</STRONG> (ARM, 16 bytes, Stack size 8 bytes, boardinit3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _platform_post_lib_init</UL>
<BR>[Called By]<UL><LI><a href="#[274e018]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[2743210]"></a>__ARM_call_via_r0</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[2743290]"></a>__call_via_r0</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[2743144]"></a>__ARM_call_via_r1</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2749ec8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[2743194]"></a>__call_via_r1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[2743078]"></a>__ARM_call_via_r2</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2748f9c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;_printf_outstr_char
<LI><a href="#[2749ec8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf
<LI><a href="#[274be60]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[27430c8]"></a>__call_via_r2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[2742fac]"></a>__ARM_call_via_r3</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2749ec8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[2742ffc]"></a>__call_via_r3</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[2742eb0]"></a>__ARM_call_via_r4</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[2742f30]"></a>__call_via_r4</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[2742db4]"></a>__ARM_call_via_r5</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[2742e34]"></a>__call_via_r5</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[2742cb8]"></a>__ARM_call_via_r6</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[2742d38]"></a>__call_via_r6</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[2742bbc]"></a>__ARM_call_via_r7</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[2742c3c]"></a>__call_via_r7</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[2742854]"></a>__I_use_semihosting</STRONG> (ARM, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sys_exit.o(.text)
</UL>
<P><STRONG><a name="[27427cc]"></a>__use_no_semihosting_swi</STRONG> (ARM, 4 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[27419a0]"></a>__rt_locale</STRONG> (ARM, 12 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27456b8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[27a02cc]"></a>__ARM_get_argv</STRONG> (Thumb, 6 bytes, Stack size 4 bytes, no_argv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __ARM_get_argv</UL>
<BR>[Address Reference Count : 1]<UL><LI> lib_init.o(.emb_text)
</UL>
<P><STRONG><a name="[279eeb0]"></a>__rt_fp_status_addr</STRONG> (ARM, 12 bytes, Stack size 0 bytes, rt_fp_status_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[279fe34]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[279fe34]"></a>_fp_init</STRONG> (ARM, 24 bytes, Stack size 8 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _fp_init</UL>
<BR>[Calls]<UL><LI><a href="#[279eeb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_fp_status_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[27456b8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[279fd28]"></a>__fplib_config_pureend_doubles</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[15d881c]"></a>Undef_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[15d881c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[15d881c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[15d87a4]"></a>SWI_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[15d87a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[15d87a4]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[15d8728]"></a>PAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[15d8728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[15d8728]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[15d86ac]"></a>DAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[15d86ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[15d86ac]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[15d8634]"></a>IRQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[15d8634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[15d8634]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[15d85bc]"></a>FIQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[15d85bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[15d85bc]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[27454f4]"></a>__ARM_exceptions_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[27456b8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[2749d48]"></a>__ARM_stackcheck</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[2745668]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (Weak Reference)
<LI><a href="#[27456b8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
<LI><a href="#[27487c4]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;exit (Weak Reference)
<LI><a href="#[2749ec8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[2745478]"></a>__Heap_DescSize</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[27456b8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[27453f8]"></a>__alloca_initialize</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[27456b8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[2745370]"></a>__cpp_initialize__aeabi_</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[27456b8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[27452f4]"></a>__cxa_finalize</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[2745668]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (Weak Reference)
</UL>

<P><STRONG><a name="[274f1cc]"></a>__user_heap_extend</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[274efe8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_extend (Weak Reference)
</UL>

<P><STRONG><a name="[2745278]"></a>_atexit_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[27456b8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[27486f4]"></a>_call_atexit_fns</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[27487c4]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;exit (Weak Reference)
</UL>

<P><STRONG><a name="[2745200]"></a>_clock_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[27456b8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[2745184]"></a>_fp_trap_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[27456b8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[2745108]"></a>_get_lc_collate</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[27456b8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[274508c]"></a>_get_lc_ctype</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[27456b8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[274500c]"></a>_get_lc_monetary</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[27456b8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[2744f90]"></a>_get_lc_numeric</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[27456b8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[2744f14]"></a>_get_lc_time</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[27456b8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[2744e98]"></a>_getenv_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[27456b8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[2744e20]"></a>_init_alloc</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[27456b8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[2744da0]"></a>_init_user_alloc</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[27456b8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[2744d2c]"></a>_initio</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[27456b8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[2749cc8]"></a>_printf_charcount</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[2749ec8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[2749c4c]"></a>_printf_fp_dec</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[2749ec8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[2749bd0]"></a>_printf_fp_hex</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[2749ec8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[2749b4c]"></a>_printf_longlong_dec</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[2749ec8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[2749ac8]"></a>_printf_longlong_hex</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[2749ec8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[2749a44]"></a>_printf_longlong_oct</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[2749ec8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[27499c8]"></a>_printf_mbtowc</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[2749ec8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[274bd5c]"></a>_printf_post_padding</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[274be60]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common (Weak Reference)
</UL>

<P><STRONG><a name="[274bcdc]"></a>_printf_pre_padding</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[274be60]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common (Weak Reference)
</UL>

<P><STRONG><a name="[2749950]"></a>_printf_str</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[2749ec8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[16b6ad0]"></a>_printf_truncate_signed</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[16b6c4c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec (Weak Reference)
</UL>

<P><STRONG><a name="[16b6a48]"></a>_printf_truncate_unsigned</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[16b6c4c]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec (Weak Reference)
</UL>

<P><STRONG><a name="[27498d8]"></a>_printf_wc</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[2749ec8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[274985c]"></a>_printf_wctomb</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[2749ec8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[2744cb4]"></a>_rand_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[27456b8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[2744c38]"></a>_signal_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[27456b8]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[2744bb4]"></a>_terminate_user_alloc</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[2745668]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (Weak Reference)
</UL>

<P><STRONG><a name="[2744b38]"></a>_terminateio</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[2745668]">&lt;&lt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (Weak Reference)
</UL>
<HR></body></html>
