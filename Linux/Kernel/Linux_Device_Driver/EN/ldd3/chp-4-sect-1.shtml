<html>
<head>
<META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>4.1. Debugging Support in the Kernel</title>
<link rel="STYLESHEET" type="text/css" href="images/style.css">
<link rel="STYLESHEET" type="text/css" href="images/docsafari.css">
</head>
<body >
<head>
<link rel="stylesheet" type="text/css" href="../style/visited-green.css">
</head>
<div align=center>
<script type="text/javascript" src="http://j.maxmind.com/app/geoip.js"></script>
<center>
<table width=100% height=90>
<tr style='display:none'>
<td style='display:xnone' id='banner' xalign=center style="background-image:url(/kernel_map.d/LKM3_2048.png);width:100%;height:90;opacity:0;filter:alpha(opacity=0);
cursor:pointer" onclick="top.location='http://www.makelinux.com/kernel_map?b'" /> 
</td> </tr>
<tr style='display:none'>
<td  id='banner2' style="opacity:0;filter:alpha(opacity=0);text-align:center;" /> 
<a target=_top href=http://www.makelinux.com/kernel_map_poster?b>
<span style="font-weight:bold"><span style="display:block;font-size:large" >Poster of Linux kernel</span>The best gift for a Linux geek</span>
</a>
</td> </tr>
<tr style='zdisplay:xnone' >
<td  id='banner3' align=center /> 
<a Xtarget=_top href="http://www.makelinux.com/kernel_map_poster?b"> <img target=_top src="http://www.makelinux.net/kernel_map.d/poster2.png" border=0></a>
</td></tr>
</table>
</center>
<script type='text/javascript' src='../common/fade.js'></script>
<script type=text/javascript>

	var banner = document.getElementById('banner');
	banner.style.backgroundPosition="50% 50%";
	banner.style.backgroundPosition=100*Math.random()+"% "+100*Math.random(100)+"%";
	//fade('banner');
    	//setTimeout("fade('banner')",1000);
    	//setTimeout("fade('banner2')",1000);
</script>

<script type="text/javascript">
var a = new Array();
a[0]='<a href=http://www.linuxdriver.co.il/>www.LinuxDriver.co.il - Embedded Linux solutions: Drivers, Media Streaming, Fast Boot. In Tel-Aviv</a>';
a[1]='<a href=http://www.MakeLinux.net/>www.MakeLinux.net - Embedded Linux solutions: Drivers, Media Streaming, Fast Boot</a>';
a[2]='<a href="http://www.amazon.com/gp/product/0672329468?ie=UTF8&tag=makelinux-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0672329468">New book <b>Linux Kernel Development</b> (3rd Edition) 2010</a><img src="http://www.assoc-amazon.com/e/ir?t=makelinux-20&l=as2&o=1&a=0672329468" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />';
a[3]='';
google_ad_width = 728;
google_ad_height = 1;
if ( 0) { 
document.write("<center>");
if (  geoip_country_code()=="IL" ) {
	if ( Math.random() > 0.5 ) document.write(a[0]+"<br>"); else document.write(a[2]);;
	google_ad_width = 728;
	google_ad_height = 1;
} else { 
	if ( Math.random() > 0.5 ) {
		if ( Math.random() > 0.5 ) document.write(a[1]+"<br>"); else document.write(a[2]);
		google_ad_width = 728;
		google_ad_height = 1;
	} else {
		google_ad_client = "pub-5656623102424572";
		/* 728x90, created 4/4/08 */
		google_ad_slot = "6613964975";
		google_ad_width = 728;
		google_ad_height = 100;
	}
}
	document.write("</center>");
}
</script>
<!--
<script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js"> </script>
-->


</div>
<!-- 
Hi surfer
<script type="text/javascript"> 
	try {
	document.write(" from <i><b>" + geoip_city()+"</b></i>"); 
	} catch (e) {
	}
</script>, please visit -->


<xhr>
<script type="text/javascript">
	s = document.location.href.lastIndexOf("/");
	a = document.location.href.substring(0,s+1);
	b = document.location.href.substring(s+1);
if ( document.location == top.location  ) {
	//alert(a + " -- " + b);
	document.write("<a href="http://www.makelinux.net/ldd3/+&#32;a&#32;+"?u=" +b + "> &lt; open Table of Content</a>");
	//top.location = a + "?u=" +b;
} else {
	document.write("<a target=_top href="http://www.makelinux.net/ldd3/+document.location&#32;+"> &lt; full page </a>");
}
function addLoadEvent(func) 
{
	var oldonload = window.onload;
	if (typeof window.onload != 'function') {
		window.onload = func;
	} else {
		window.onload = function() {
			oldonload();
			func();
		}
	}
}

addLoadEvent(  function() { 
		try {
		} catch (e) {
	}
}
);


</script>
<span style='display:none;background:#BBFFFF;color:black;position:absolute;right:0;' ><a target=_main href=http://www.makelinux.net/kernel_map?src=ldd3>&nbsp;Linux kernel map&nbsp;</a></span><br>
<script type="text/javascript">
</script>
<script src="http://www.google-analytics.com/urchin.js" type="text/javascript"> </script>
<script type="text/javascript"> _uacct = "UA-839593-1"; if (typeof(urchinTracker) == 'function') urchinTracker();</script>
<script type=text/javascript>
	// document.write("<img src=http://const.homelinux.net/1.png?REF="+top.document.referrer+" height=0 width=0 border=0 />");
</script>


<table width="100%" border="0" cellspacing="0" cellpadding="0" bgcolor="#e6e6e6">
<tr >
<td class="v2" align="left" width="30%">
<a href="chp-4.shtml"> &#8678; prev </a>
</td>
<td class="v2" align="center" width="40%">
<a href="index.html" target=_parent style="text-decoration:none;text-underline:none"> &#8689; home </a>
</td>
<td class="v2" align="right" width="30%">
<a href="chp-4-sect-2.shtml"> next &#8680; </a>
</td>
</tr>
</table>
<br>
<table width="100%" border="0" cellspacing="0" cellpadding="0"><tr><td valign="top"><a name="chp-4-sect-1"></a>
<h3 class="docSection1Title">4.1. Debugging Support in the Kernel</h3>

<p class="docText">In <a class="docLink" href="chp-2.shtml#chp-2">Chapter 2</a>, we recommended
that<a name="chp-4-ITERM-4653"></a>
<a name="chp-4-ITERM-4654"></a>
<a name="chp-4-ITERM-4655"></a> you build
<a name="chp-4-ITERM-4656"></a>and install your
own kernel, rather than running the stock kernel that comes with your
distribution. One of the strongest reasons for running your own
kernel is that the kernel developers have built several debugging
features into the kernel itself. These features can create extra
output and slow performance, so they tend not to be enabled in
production kernels from distributors. As a kernel developer, however,
you have different priorities and will gladly accept the (minimal)
overhead of the extra kernel debugging support.</p>

<p class="docText">Here, we list the configuration options that <a name="chp-4-ITERM-4657"></a>
<a name="chp-4-ITERM-4658"></a> <a name="chp-4-ITERM-4659"></a> <a name="chp-4-ITERM-4660"></a> <a name="chp-4-ITERM-4661"></a>should be
enabled for kernels used for development. Except where specified
otherwise, all of these options are found under the
"kernel hacking" menu in whatever
kernel configuration tool you prefer. Note that some of these options
are not supported by all architectures.</p>

<a name="chp-4-ITERM-4662"></a><a name="chp-4-ITERM-4663"></a><a name="chp-4-ITERM-4664"></a><a name="chp-4-ITERM-4665"></a><a name="chp-4-ITERM-4666"></a><a name="chp-4-ITERM-4667"></a><a name="chp-4-ITERM-4668"></a><a name="chp-4-ITERM-4669"></a><a name="chp-4-ITERM-4670"></a><a name="chp-4-ITERM-4671"></a><a name="chp-4-ITERM-4672"></a><a name="chp-4-ITERM-4673"></a><a name="chp-4-ITERM-4674"></a><a name="chp-4-ITERM-4675"></a><a name="chp-4-ITERM-4676"></a><a name="chp-4-ITERM-4677"></a><a name="chp-4-ITERM-4678"></a><a name="chp-4-ITERM-4679"></a><dl class="docList"><dt><span class="docPubcolor"><span class="docPubcolor"><span class="docMonofont">CONFIG_DEBUG_KERNEL</span></span><a name="chp-4-ITERM-4662"></a></span></dt></P>
<dd>
<p class="docList">This option just makes other debugging options available; it should
be turned on but does not, by itself, enable any features.</P>
</dd>
<dt><span class="docPubcolor"><span class="docPubcolor"><span class="docMonofont">CONFIG_DEBUG_SLAB</span></span><a name="chp-4-ITERM-4663"></a></span></dt></p>
<dd>
<p class="docList">This crucial option turns on several types of checks in the kernel
memory allocation functions; with these checks enabled, it is
possible to detect a number of memory overrun and missing
initialization errors. Each byte of allocated memory is set to
<tt>0xa5</tt> before being handed to the caller and then
set to <tt>0x6b</tt> when it is freed. If you ever see
either of those "poison" patterns
repeating in output from your driver (or often in an oops listing),
you'll know exactly what sort of error to look for.
When debugging is enabled, the kernel also places special guard
values before and after every allocated memory object; if those
values ever get changed, the kernel knows that somebody has overrun a
memory allocation, and it complains loudly. Various checks for more
obscure errors are enabled as well.</P>
</dd>
<dt><span class="docPubcolor"><span class="docPubcolor"><span class="docMonofont">CONFIG_DEBUG_PAGEALLOC</span></span><a name="chp-4-ITERM-4664"></a></span></dt></P>
<dd>
<p class="docList">Full pages are removed from the kernel address space when freed. This
option can slow things down significantly, but it can also quickly
point out certain kinds of memory corruption errors.</P>
</dd>
<dt><span class="docPubcolor"><span class="docPubcolor"><span class="docMonofont">CONFIG_DEBUG_SPINLOCK</span></span><a name="chp-4-ITERM-4665"></a></span></dt></p>
<dd>
<p class="docList">With this option enabled, the kernel catches operations on
uninitialized spinlocks and various other errors (such as unlocking a
lock twice).</p>
</dd>
<dt><span class="docPubcolor"><span class="docPubcolor"><span class="docMonofont">CONFIG_DEBUG_SPINLOCK_SLEEP</span></span><a name="chp-4-ITERM-4666"></a></span></dt></P>
<dd>
<p class="docList">This option enables a check for attempts to sleep while holding a
spinlock. In fact, it complains if you call a function that could
potentially sleep, even if the call in question would not sleep.</p>
</dd>
<dt><span class="docPubcolor"><span class="docPubcolor"><span class="docMonofont">CONFIG_INIT_DEBUG</span></span><a name="chp-4-ITERM-4667"></a></span></dt></p>
<dd>
<p class="docList">Items marked with <tt>_ _init</tt> (or <tt>_
_initdata</tt>) are discarded after system initialization or
module load time. This option enables checks for code that attempts
to access initialization-time memory after initialization is
complete.</p>
</dd>
<dt><span class="docPubcolor"><span class="docPubcolor"><span class="docMonofont">CONFIG_DEBUG_INFO</span></span><a name="chp-4-ITERM-4668"></a></span></dt></P>
<dd>
<p class="docList">This option causes the kernel to be built with full debugging
information included. You'll need that information
if you want to debug the kernel with <span class="docEmphasis">gdb</span>. You
may also want to enable <tt>CONFIG_FRAME_POINTER</tt> if
you plan to use <span class="docEmphasis">gdb</span>.</p>
</dd>
<dt><span class="docPubcolor"><span class="docPubcolor"><span class="docMonofont">CONFIG_MAGIC_SYSRQ</span></span><a name="chp-4-ITERM-4669"></a></span></dt></p>
<dd>
<p class="docList">Enables the "magic SysRq" key. We
look at this key in <a class="docLink" href="chp-4-sect-5.shtml#chp-4-sect-5.2">Section 4.5.2</a> later in this chapter.</p>
</dd>
<dt><span class="docPubcolor"><span class="docPubcolor"><span class="docMonofont">CONFIG_DEBUG_STACKOVERFLOW</span></span><a name="chp-4-ITERM-4670"></a></span></dt></P>
<dt><span class="docPubcolor"><span class="docPubcolor"><span class="docMonofont">CONFIG_DEBUG_STACK_USAGE</span></span><a name="chp-4-ITERM-4671"></a></span></dt></p>
<dd>
<p class="docList">These options can help track down kernel stack overflows. A sure sign
of a stack overflow is an oops listing without any sort of reasonable
back trace. The first option adds explicit overflow checks to the
kernel; the second causes the kernel to monitor stack usage and make
some statistics available via the magic SysRq key.</p>
</dd>
<dt><span class="docPubcolor"><span class="docPubcolor"><span class="docMonofont">CONFIG_KALLSYMS</span></span><a name="chp-4-ITERM-4672"></a></span></dt></p>
<dd>
<p class="docList">This option (under "General setup/Standard
features") causes kernel symbol information to be
built into the kernel; it is enabled by default. The symbol
information is used in debugging contexts; without it, an oops
listing can give you a kernel traceback only in hexadecimal, which is
not very useful.</p>
</dd>
<dt><span class="docPubcolor"><span class="docPubcolor"><span class="docMonofont">CONFIG_IKCONFIG</span></span><a name="chp-4-ITERM-4673"></a></span></dt></p>
<dt><span class="docPubcolor"><span class="docPubcolor"><span class="docMonofont">CONFIG_IKCONFIG_PROC</span></span><a name="chp-4-ITERM-4674"></a></span></dt></P>
<dd>
<p class="docList">These options (found in the "General
setup" menu) cause the full kernel configuration
state to be built into the kernel and to be made available via
<i>/proc</I>. Most kernel developers know which
configuration they used and do not need these options (which make the
kernel bigger). They can be useful, though, if you are trying to
debug a problem in a kernel built by somebody else.</P>
</dd>
<dt><span class="docPubcolor"><span class="docPubcolor"><span class="docMonofont">CONFIG_ACPI_DEBUG</span></span><a name="chp-4-ITERM-4675"></a></span></dt></p>
<dd>
<p class="docList">Under "Power management/ACPI." This
option turns on verbose ACPI (Advanced Configuration and Power
Interface) debugging information, which can be useful if you suspect
a problem related to ACPI.</P>
</dd>
<dt><span class="docPubcolor"><span class="docPubcolor"><span class="docMonofont">CONFIG_DEBUG_DRIVER</span></span><a name="chp-4-ITERM-4676"></a></span></dt></P>
<dd>
<p class="docList">Under "Device drivers." Turns on
debugging information in the driver core, which can be useful for
tracking down problems in the low-level support code.
We'll look at the driver core in <a class="docLink" href="chp-14.shtml#chp-14">Chapter 14</a>.</P>
</dd>
<dt><span class="docPubcolor"><span class="docPubcolor"><span class="docMonofont">CONFIG_SCSI_CONSTANTS</span></span><a name="chp-4-ITERM-4677"></a></span></dt></p>
<dd>
<p class="docList">This option, found under "Device drivers/SCSI device
support," builds in information for verbose SCSI
error messages. If you are working on a SCSI driver, you probably
want this option.</p>
</dd>
<dt><span class="docPubcolor"><span class="docPubcolor"><span class="docMonofont">CONFIG_INPUT_EVBUG</span></span><a name="chp-4-ITERM-4678"></a></span></dt></P>
<dd>
<p class="docList">This option (under "Device drivers/Input device
support") turns on verbose logging of input events.
If you are working on a driver for an input device, this option may
be helpful. Be aware of the security implications of this option,
however: it logs everything you type, including your passwords.</p>
</dd>
<dt><span class="docPubcolor"><span class="docPubcolor"><span class="docMonofont">CONFIG_PROFILING</span></span><a name="chp-4-ITERM-4679"></a></span></dt></p>
<dd>
<p class="docList">This option is found under "Profiling
support." Profiling is normally used for system
performance tuning, but it can also be useful for tracking down some
kernel hangs and related problems.</p>
</dd>
</dl>

<p class="docText">We will revisit<a name="chp-4-ITERM-4680"></a> <a name="chp-4-ITERM-4681"></a> <a name="chp-4-ITERM-4682"></a> <a name="chp-4-ITERM-4683"></a> <a name="chp-4-ITERM-4684"></a> some <a name="chp-4-ITERM-4685"></a> <a name="chp-4-ITERM-4686"></a> <a name="chp-4-ITERM-4687"></a>of the above options as we look at
various ways of tracking down kernel problems. But first, we will
look at the classic debugging technique: print statements.</p>


<ul></UL></td></tr></table>
<table width="100%" border="0" cellspacing="0" cellpadding="0" bgcolor="#e6e6e6">
<tr >
<td class="v2" align="left" width="30%">
<a href="chp-4.shtml"> &#8678; prev </a>
</td>
<td class="v2" align="center" width="40%">
<a href="index.html" target=_parent style="text-decoration:none;text-underline:none"> &#8689; home </a>
</td>
<td class="v2" align="right" width="30%">
<a href="chp-4-sect-2.shtml"> next &#8680; </a>
</td>
</tr>
</table>
<script type="text/javascript" src="http://j.maxmind.com/app/geoip.js"></script>
<center>
<table width=100% height=90>
<tr style='display:none'>
<td style='display:xnone' id='banner' xalign=center style="background-image:url(/kernel_map.d/LKM3_2048.png);width:100%;height:90;opacity:0;filter:alpha(opacity=0);
cursor:pointer" onclick="top.location='http://www.makelinux.com/kernel_map?b'" /> 
</td> </tr>
<tr style='display:none'>
<td  id='banner2' style="opacity:0;filter:alpha(opacity=0);text-align:center;" /> 
<a target=_top href=http://www.makelinux.com/kernel_map_poster?b>
<span style="font-weight:bold"><span style="display:block;font-size:large" >Poster of Linux kernel</span>The best gift for a Linux geek</span>
</a>
</td> </tr>
<tr style='zdisplay:xnone' >
<td  id='banner3' align=center /> 
<a Xtarget=_top href="http://www.makelinux.com/kernel_map_poster?b"> <img target=_top src="http://www.makelinux.net/kernel_map.d/poster2.png" border=0></a>
</td></tr>
</table>
</center>
<script type='text/javascript' src='../common/fade.js'></script>
<script type=text/javascript>

	var banner = document.getElementById('banner');
	banner.style.backgroundPosition="50% 50%";
	banner.style.backgroundPosition=100*Math.random()+"% "+100*Math.random(100)+"%";
	//fade('banner');
    	//setTimeout("fade('banner')",1000);
    	//setTimeout("fade('banner2')",1000);
</script>

<script type="text/javascript">
var a = new Array();
a[0]='<a href=http://www.linuxdriver.co.il/>www.LinuxDriver.co.il - Embedded Linux solutions: Drivers, Media Streaming, Fast Boot. In Tel-Aviv</a>';
a[1]='<a href=http://www.MakeLinux.net/>www.MakeLinux.net - Embedded Linux solutions: Drivers, Media Streaming, Fast Boot</a>';
a[2]='<a href="http://www.amazon.com/gp/product/0672329468?ie=UTF8&tag=makelinux-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0672329468">New book <b>Linux Kernel Development</b> (3rd Edition) 2010</a><img src="http://www.assoc-amazon.com/e/ir?t=makelinux-20&l=as2&o=1&a=0672329468" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />';
a[3]='';
google_ad_width = 728;
google_ad_height = 1;
if ( 0) { 
document.write("<center>");
if (  geoip_country_code()=="IL" ) {
	if ( Math.random() > 0.5 ) document.write(a[0]+"<br>"); else document.write(a[2]);;
	google_ad_width = 728;
	google_ad_height = 1;
} else { 
	if ( Math.random() > 0.5 ) {
		if ( Math.random() > 0.5 ) document.write(a[1]+"<br>"); else document.write(a[2]);
		google_ad_width = 728;
		google_ad_height = 1;
	} else {
		google_ad_client = "pub-5656623102424572";
		/* 728x90, created 4/4/08 */
		google_ad_slot = "6613964975";
		google_ad_width = 728;
		google_ad_height = 100;
	}
}
	document.write("</center>");
}
</script>
<!--
<script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js"> </script>
-->



<script type="text/javascript" src="http://j.maxmind.com/app/geoip.js"></script>
<script type="text/javascript" >
{
	var os, br, ua = navigator.userAgent;

	if (ua.indexOf("Linux")!=-1) os="Linux";
	if (ua.indexOf("Windows")!=-1) os="Windows";
	if (ua.indexOf("Mac")!=-1) os="Mac";

	if (ua.indexOf("Gecko")!=-1) br="Gecko";
	if (ua.indexOf("Firefox")!=-1) br="Firefox";
	if (ua.indexOf("WebKit")!=-1) br="WebKit";
	if (ua.indexOf("MSIE")!=-1) br="MSIE";
	if (ua.indexOf("Safari")!=-1) br="Safari";
	if (ua.indexOf("Chrome")!=-1) br="Chrome";
	if (ua.indexOf("Konqueror")!=-1) br="Konqueror";
	if (ua.indexOf("Opera")!=-1) br="Opera";

	function query_var(query, variable) 
	{
		var vars = query.replace(/\?/g,"&").replace(/%20/g,"+").split("&");
		for (var i=0;i<vars.length;i++) {
			var pair = vars[i].split("=");
			if (pair[0] == variable) {
				return pair[1];
			}

		} 
	}
	var RQ="";
	q = query_var(top.document.referrer,'q');
	if ( q != undefined)
		RQ = ".&Q=" + q
	else if (top.document.referrer.length)
	
		RQ = ".&R=" + top.document.referrer;
	var traceimg= new Image();
	try {
		traceimg.src="http://const.homelinux.net/1.png?U="
			+ br + "-" + os 
			+"."+geoip_region_name().replace(/ /g,"_") 
			+"."+geoip_country_code()
			+ RQ ;
	} catch (e) {
	}
}
</script>


</body>
</html>
