<html>
<head>
<META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>index_I</title>
<link rel="STYLESHEET" type="text/css" href="images/style.css">
<link rel="STYLESHEET" type="text/css" href="images/docsafari.css">
</head>
<body >
<head>
<link rel="stylesheet" type="text/css" href="../style/visited-green.css">
</head>
<div align=center>
<script type="text/javascript" src="http://j.maxmind.com/app/geoip.js"></script>
<center>
<table width=100% height=90>
<tr style='display:none'>
<td style='display:xnone' id='banner' xalign=center style="background-image:url(/kernel_map.d/LKM3_2048.png);width:100%;height:90;opacity:0;filter:alpha(opacity=0);
cursor:pointer" onclick="top.location='http://www.makelinux.com/kernel_map?b'" /> 
</td> </tr>
<tr style='display:none'>
<td  id='banner2' style="opacity:0;filter:alpha(opacity=0);text-align:center;" /> 
<a target=_top href=http://www.makelinux.com/kernel_map_poster?b>
<span style="font-weight:bold"><span style="display:block;font-size:large" >Poster of Linux kernel</span>The best gift for a Linux geek</span>
</a>
</td> </tr>
<tr style='zdisplay:xnone' >
<td  id='banner3' align=center /> 
<a Xtarget=_top href="http://www.makelinux.com/kernel_map_poster?b"> <img target=_top src="http://www.makelinux.net/kernel_map.d/poster2.png" border=0></a>
</td></tr>
</table>
</center>
<script type='text/javascript' src='../common/fade.js'></script>
<script type=text/javascript>

	var banner = document.getElementById('banner');
	banner.style.backgroundPosition="50% 50%";
	banner.style.backgroundPosition=100*Math.random()+"% "+100*Math.random(100)+"%";
	//fade('banner');
    	//setTimeout("fade('banner')",1000);
    	//setTimeout("fade('banner2')",1000);
</script>

<script type="text/javascript">
var a = new Array();
a[0]='<a href=http://www.linuxdriver.co.il/>www.LinuxDriver.co.il - Embedded Linux solutions: Drivers, Media Streaming, Fast Boot. In Tel-Aviv</a>';
a[1]='<a href=http://www.MakeLinux.net/>www.MakeLinux.net - Embedded Linux solutions: Drivers, Media Streaming, Fast Boot</a>';
a[2]='<a href="http://www.amazon.com/gp/product/0672329468?ie=UTF8&tag=makelinux-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0672329468">New book <b>Linux Kernel Development</b> (3rd Edition) 2010</a><img src="http://www.assoc-amazon.com/e/ir?t=makelinux-20&l=as2&o=1&a=0672329468" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />';
a[3]='';
google_ad_width = 728;
google_ad_height = 1;
if ( 0) { 
document.write("<center>");
if (  geoip_country_code()=="IL" ) {
	if ( Math.random() > 0.5 ) document.write(a[0]+"<br>"); else document.write(a[2]);;
	google_ad_width = 728;
	google_ad_height = 1;
} else { 
	if ( Math.random() > 0.5 ) {
		if ( Math.random() > 0.5 ) document.write(a[1]+"<br>"); else document.write(a[2]);
		google_ad_width = 728;
		google_ad_height = 1;
	} else {
		google_ad_client = "pub-5656623102424572";
		/* 728x90, created 4/4/08 */
		google_ad_slot = "6613964975";
		google_ad_width = 728;
		google_ad_height = 100;
	}
}
	document.write("</center>");
}
</script>
<!--
<script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js"> </script>
-->


</div>
<!-- 
Hi surfer
<script type="text/javascript"> 
	try {
	document.write(" from <i><b>" + geoip_city()+"</b></i>"); 
	} catch (e) {
	}
</script>, please visit -->


<xhr>
<script type="text/javascript">
	s = document.location.href.lastIndexOf("/");
	a = document.location.href.substring(0,s+1);
	b = document.location.href.substring(s+1);
if ( document.location == top.location  ) {
	//alert(a + " -- " + b);
	document.write("<a href="http://www.makelinux.net/ldd3/+&#32;a&#32;+"?u=" +b + "> &lt; open Table of Content</a>");
	//top.location = a + "?u=" +b;
} else {
	document.write("<a target=_top href="http://www.makelinux.net/ldd3/+document.location&#32;+"> &lt; full page </a>");
}
function addLoadEvent(func) 
{
	var oldonload = window.onload;
	if (typeof window.onload != 'function') {
		window.onload = func;
	} else {
		window.onload = function() {
			oldonload();
			func();
		}
	}
}

addLoadEvent(  function() { 
		try {
		} catch (e) {
	}
}
);


</script>
<span style='display:none;background:#BBFFFF;color:black;position:absolute;right:0;' ><a target=_main href=http://www.makelinux.net/kernel_map?src=ldd3>&nbsp;Linux kernel map&nbsp;</a></span><br>
<script type="text/javascript">
</script>
<script src="http://www.google-analytics.com/urchin.js" type="text/javascript"> </script>
<script type="text/javascript"> _uacct = "UA-839593-1"; if (typeof(urchinTracker) == 'function') urchinTracker();</script>
<script type=text/javascript>
	// document.write("<img src=http://const.homelinux.net/1.png?REF="+top.document.referrer+" height=0 width=0 border=0 />");
</script>


<table width="100%" border="0" cellspacing="0" cellpadding="0" bgcolor="#e6e6e6">
<tr >
<td class="v2" align="left" width="30%">
<a href="index_.shtml"> &#8678; prev </a>
</td>
<td class="v2" align="center" width="40%">
<a href="index.html" target=_parent style="text-decoration:none;text-underline:none"> &#8689; home </a>
</td>
<td class="v2" align="right" width="30%">
&nbsp;
</td>
</tr>
</table>
<br>
<table width="100%" border="0" cellspacing="0" cellpadding="0"><tr><td valign="top" class="v2"><br><h2 class="docGlossaryTitle">Index</h2><br>
              [<a class="v1" href="index_SYMBOL.shtml">SYMBOL</a>]
            
              [<a class="v1" href="index_A.shtml">A</a>]
            
              [<a class="v1" href="index_B.shtml">B</a>]
            
              [<a class="v1" href="index_C.shtml">C</a>]
            
              [<a class="v1" href="index_D.shtml">D</a>]
            
              [<a class="v1" href="index_E.shtml">E</a>]
            
              [<a class="v1" href="index_F.shtml">F</a>]
            
              [<a class="v1" href="index_G.shtml">G</a>]
            
              [<a class="v1" href="index_H.shtml">H</a>]
            
              [<a class="v1" href="index_I.shtml" style="font-weight:bold;">I</a>]
            
              [<a class="v1" href="index_J.shtml">J</a>]
            
              [<a class="v1" href="index_K.shtml">K</a>]
            
              [<a class="v1" href="index_L.shtml">L</a>]
            
              [<a class="v1" href="index_M.shtml">M</a>]
            
              [<a class="v1" href="index_N.shtml">N</a>]
            
              [<a class="v1" href="index_O.shtml">O</a>]
            
              [<a class="v1" href="index_P.shtml">P</a>]
            
              [<a class="v1" href="index_Q.shtml">Q</a>]
            
              [<a class="v1" href="index_R.shtml">R</a>]
            
              [<a class="v1" href="index_S.shtml">S</a>]
            
              [<a class="v1" href="index_T.shtml">T</a>]
            
              [<a class="v1" href="index_U.shtml">U</a>]
            
              [<a class="v1" href="index_V.shtml">V</a>]
            
              [<a class="v1" href="index_W.shtml">W</a>]
            
              [<a class="v1" href="index_X.shtml">X</a>]
            
              [<a class="v1" href="index_Z.shtml">Z</a>]
            <br><br><A class="v2" HREF="chp-6-sect-3.shtml#chp-6-ITERM-5329"> I/O</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-15-sect-3.shtml#chp-15-ITERM-7122"> asynchronous</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-6-sect-2.shtml#chp-6-ITERM-5221"> blocking</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-15-sect-3.shtml#chp-15-ITERM-7114"> direct</A><A class="v2" HREF="chp-15-sect-5.shtml#chp-15-ITERM-7283"> 2nd</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-6-sect-3.shtml#chp-6-ITERM-5328"> flushing pending</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-12-sect-1.shtml#chp-12-ITERM-6338"> generic address spaces</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-9-sect-1.shtml#chp-9-ITERM-5832"> hardware management</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-6.shtml#chp-10-ITERM-6164"> interrupt handlers</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-9-sect-5.shtml#chp-9-ITERM-6017"> mapping</A><A class="v2" HREF="chp-9-sect-4.shtml#chp-9-ITERM-5981"> 2nd</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-9-sect-4.shtml#chp-9-ITERM-5975"> memory (access)</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-9-sect-2.shtml#chp-9-ITERM-5924"> pausing</A><A class="v2" HREF="chp-9-sect-2.shtml#chp-9-ITERM-5923"> 2nd</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-12-sect-1.shtml#chp-12-ITERM-6294"> PCI</A><A class="v2" HREF="chp-12-sect-1.shtml#chp-12-ITERM-6332"> 2nd</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-15-sect-2.shtml#chp-15-ITERM-7084"> regions</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-9-sect-1.shtml#chp-9-ITERM-5834"> registers</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-5.shtml#chp-17-ITERM-7725"> scatter/gather</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-16-sect-3.shtml#chp-16-ITERM-7377"> schedulers</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-9-sect-2.shtml#chp-9-ITERM-5905"> string operations</A><BR><A class="v2" HREF="chp-9-sect-1.shtml#chp-9-ITERM-5837"> I/O registers versus RAM</A><BR><A class="v2" HREF="chp-1-sect-3.shtml#chp-1-ITERM-4038"> I2O drivers</A><BR>IA-64 architecture<br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-9-sect-2.shtml#chp-9-ITERM-5935"> porting and</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-2.shtml#chp-10-ITERM-6073"> /proc/interrupts file, snapshot of</A><BR><A class="v2" HREF="chp-14-sect-7.shtml#chp-14-ITERM-6855"> IEEE1394 bus (Firewire)</A><br><A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7579"> if.h header file</A><A class="v2" HREF="chp-17-sect-12.shtml#chp-17-ITERM-7838"> 2nd</A><br>ifconfig command<br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7544"> net_device structure and</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-4.shtml#chp-17-ITERM-7683"> opening network drivers</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-1.shtml#chp-17-ITERM-7485"> snull interfaces</A><br><A class="v2" HREF="chp-17-sect-14.shtml#chp-17-ITERM-7862"> IFF_ symbols</A><A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7578"> 2nd</A><br><A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7598"> IFF_ALLMULTI flag</A><BR><A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7606"> IFF_AUTOMEDIA flag</A><br><A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7582"> IFF_BROADCAST flag</A><br><A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7584"> IFF_DEBUG flag</A><BR><A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7610"> IFF_DYNAMIC flag</A><br><A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7586"> IFF_LOOPBACK flag</A><BR><A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7600"> IFF_MASTER flag</A><br><A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7595"> IFF_MULTICAST flag</A><br><A class="v2" HREF="chp-17-sect-2.shtml#chp-17-ITERM-7519"> IFF_NOARP flag</A><A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7590"> 2nd</A><br><A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7614"> IFF_NOTRAILERS flag</A><br><A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7588"> IFF_POINTOPOINT flag</A><br><A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7604"> IFF_PORTSEL flag</A><br><A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7593"> IFF_PROMISC flag</A><br><A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7612"> IFF_RUNNING flag</A><br><A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7602"> IFF_SLAVE flag</A><br><A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7580"> IFF_UP flag</A><br><A class="v2" HREF="chp-17-sect-12.shtml#chp-17-ITERM-7836"> ifreq structure</A><br>implementation<br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-15-sect-3.shtml#chp-15-ITERM-7123"> asynchronous I/O</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-7-sect-3.shtml#chp-7-ITERM-5528"> busy-waiting</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-1-sect-3.shtml#chp-1-ITERM-4018"> of classes</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-4-sect-2.shtml#chp-4-ITERM-4768"> of debugging levels</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-15-sect-5.shtml#chp-15-ITERM-7281"> direct I/O</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-4-sect-3.shtml#chp-4-ITERM-4789"> of files in /proc filesystems</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-3.shtml#chp-10-ITERM-6108"> interrupt handlers</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-6-sect-1.shtml#chp-6-ITERM-5201"> ioctl commands</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-12-sect-2.shtml#chp-12-ITERM-6358"> ISA (PCI)</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-6-sect-5.shtml#chp-6-ITERM-5374"> llseek method</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-15-sect-5.shtml#chp-15-ITERM-7280"> mmap</A><A class="v2" HREF="chp-15-sect-1.shtml#chp-15-ITERM-6955"> 2nd</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-14.shtml#chp-17-ITERM-7867"> multicasting</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-1-sect-1.shtml#chp-1-ITERM-3968"> of policies</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-16-sect-2.shtml#chp-16-ITERM-7348"> removable media (supporting)</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-5-sect-3.shtml#chp-5-ITERM-4985"> semaphores</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-7-sect-4.shtml#chp-7-ITERM-5585"> timers</A><br><A class="v2" HREF="chp-7-sect-4.shtml#chp-7-ITERM-5573"> in_atomic function</A><br><A class="v2" HREF="chp-7-sect-4.shtml#chp-7-ITERM-5571"> in_interrupt function</A><BR><A class="v2" HREF="chp-9-sect-2.shtml#chp-9-ITERM-5885"> inb function</A><BR><A class="v2" HREF="chp-9-sect-2.shtml#chp-9-ITERM-5925"> inb_p function</A><BR><A class="v2" HREF="chp-4-sect-5.shtml#chp-4-ITERM-4893"> infinite loops, preventing</A><br><A class="v2" HREF="chp-1-sect-4.shtml#chp-1-ITERM-4054"> information leakage</A><BR><A class="v2" HREF="chp-3-sect-2.shtml#chp-3-ITERM-4395"> init scripts and loading/unloading modules</A><BR><A class="v2" HREF="chp-2-sect-10.shtml#chp-2-ITERM-4313"> init.h header file</A><br><A class="v2" HREF="chp-11-sect-5.shtml#chp-11-ITERM-6252"> INIT_LIST_HEAD macro</A><br>initialization<br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-5-sect-4.shtml#chp-5-ITERM-5010"> completions (semaphores)</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-2.shtml#chp-17-ITERM-7512"> devices</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-16-sect-1.shtml#chp-16-ITERM-7319"> gendisk structure</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-2.shtml#chp-10-ITERM-6055"> interrupt handlers</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-14-sect-1.shtml#chp-14-ITERM-6625"> kobjects</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-2-sect-7.shtml#chp-2-ITERM-4253"> modules</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-5-sect-3.shtml#chp-5-ITERM-4989"> mutexes</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-2.shtml#chp-17-ITERM-7510"> net_device structure</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-12-sect-1.shtml#chp-12-ITERM-6296"> PCI</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-5-sect-3.shtml#chp-5-ITERM-4999"> reader/writer semaphores</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-12-sect-1.shtml#chp-12-ITERM-6303"> registers (PCI)</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-16-sect-1.shtml#chp-16-ITERM-7323"> sbull drivers</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-5-sect-7.shtml#chp-5-ITERM-5124"> seqlocks</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-13-sect-4.shtml#chp-13-ITERM-6542"> struct usb_driver structure</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-3-sect-4.shtml#chp-3-ITERM-4529"> structures (registration)</A><br><A class="v2" HREF="chp-9-sect-2.shtml#chp-9-ITERM-5894"> inl function</A><br><A class="v2" HREF="chp-7-sect-1.shtml#chp-7-ITERM-5491"> inline assembly code (example)</A><br><A class="v2" HREF="chp-6-sect-1.shtml#chp-6-ITERM-5140"> inode pointer in ioctl method</A><br><A class="v2" HREF="chp-3-sect-3.shtml#chp-3-ITERM-4521"> inode structure</A><br><A class="v2" HREF="chp-14-sect-7.shtml#chp-14-ITERM-6869"> input devices (hotplugging)</A><br><A class="v2" HREF="chp-6-sect-4.shtml#chp-6-ITERM-5349"> input files, enabling asynchronous notification from</A><br><A class="v2" HREF="chp-2-sect-5.shtml#chp-2-ITERM-4229"> input module</A><br><A class="v2" HREF="chp-9.shtml#chp-9-ITERM-5827"> input pins</A><A class="v2" HREF="chp-9-sect-3.shtml#chp-9-ITERM-5950"> 2nd</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-9-sect-3.shtml#chp-9-ITERM-5967"> reading values from parallel port</A><BR><A class="v2" HREF="chp-9-sect-2.shtml#chp-9-ITERM-5907"> insb function</A><br><A class="v2" HREF="chp-9-sect-2.shtml#chp-9-ITERM-5917"> insl function</A><BR><A class="v2" HREF="chp-2-sect-2.shtml#chp-2-ITERM-4106"> insmod program</A><A class="v2" HREF="chp-2-sect-4.shtml#chp-2-ITERM-4179"> 2nd</A><A class="v2" HREF="chp-1-sect-2.shtml#chp-1-ITERM-4004"> 3rd</A><A class="v2" HREF="chp-1-sect-2.shtml#chp-1-ITERM-4009"> 4th</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-2-sect-8.shtml#chp-2-ITERM-4289"> assigning parameter values</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-3-sect-2.shtml#chp-3-ITERM-4397"> dynamically allocating major numbers</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-2-sect-5.shtml#chp-2-ITERM-4235"> modprobe program versus</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-2-sect-2.shtml#chp-2-ITERM-4104"> testing modules using</A><BR>installation<br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-2.shtml#chp-10-ITERM-6029"> interrupt handlers</A><A class="v2" HREF="chp-10-sect-5.shtml#chp-10-ITERM-6144"> 2nd</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-2-sect-1.shtml#chp-2-ITERM-4089"> mainline kernels</A><BR><A class="v2" HREF="chp-9-sect-2.shtml#chp-9-ITERM-5912"> insw function</A><BR><A class="v2" HREF="chp-13-sect-3.shtml#chp-13-ITERM-6459"> int actual_length field (USB)</A><br><A class="v2" HREF="chp-11-sect-1.shtml#chp-11-ITERM-6188"> int data type</A><br><A class="v2" HREF="chp-13-sect-3.shtml#chp-13-ITERM-6464"> int error_count field (USB)</A><br>int field<br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7541"> net_device structure</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-12-sect-1.shtml#chp-12-ITERM-6324"> PCI registration</A><BR><A class="v2" HREF="chp-16-sect-1.shtml#chp-16-ITERM-7316"> int flags field (gendisk)</A><BR><A class="v2" HREF="chp-13-sect-4.shtml#chp-13-ITERM-6538"> int function (USB)</A><br><A class="v2" HREF="chp-13-sect-3.shtml#chp-13-ITERM-6462"> int interval field (USB)</A><BR><A class="v2" HREF="chp-16-sect-1.shtml#chp-16-ITERM-7311"> int major field (gendisk)</A><BR><A class="v2" HREF="chp-13-sect-1.shtml#chp-13-ITERM-6421"> int minor field (USB)</A><br><A class="v2" HREF="chp-13-sect-4.shtml#chp-13-ITERM-6563"> int minor_base variable (USB)</A><br><A class="v2" HREF="chp-16-sect-1.shtml#chp-16-ITERM-7312"> int minors field (gendisk)</A><br><A class="v2" HREF="chp-13-sect-3.shtml#chp-13-ITERM-6463"> int number_of_packets field (USB)</A><br><A class="v2" HREF="chp-12-sect-1.shtml#chp-12-ITERM-6328"> int pci_enable_device function</A><BR><A class="v2" HREF="chp-4-sect-2.shtml#chp-4-ITERM-4775"> int printk_ratelimit(void) function</A><br><A class="v2" HREF="chp-4-sect-3.shtml#chp-4-ITERM-4836"> int seq_escape function</A><br><A class="v2" HREF="chp-4-sect-3.shtml#chp-4-ITERM-4838"> int seq_path function</A><BR><A class="v2" HREF="chp-4-sect-3.shtml#chp-4-ITERM-4830"> int seq_printf function</A><br><A class="v2" HREF="chp-4-sect-3.shtml#chp-4-ITERM-4832"> int seq_putc function</A><br><A class="v2" HREF="chp-4-sect-3.shtml#chp-4-ITERM-4834"> int seq_puts function</A><BR><A class="v2" HREF="chp-13-sect-3.shtml#chp-13-ITERM-6461"> int start_frame field (USB)</A><br><A class="v2" HREF="chp-13-sect-3.shtml#chp-13-ITERM-6460"> int status field (USB)</A><BR><A class="v2" HREF="chp-13-sect-3.shtml#chp-13-ITERM-6454"> int transfer_buffer_length field (USB)</A><br><A class="v2" HREF="chp-14-sect-7.shtml#chp-14-ITERM-6886"> INTERFACE variable</A><br><A class="v2" HREF="chp-11-sect-3.shtml#chp-11-ITERM-6206"> interface-specific data types</A><br>interfaces<br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-8-sect-3.shtml#chp-8-ITERM-5762"> alloc_pages</A><br>&nbsp;&nbsp;&nbsp;&nbsp;block drivers<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-16-sect-4.shtml#chp-16-ITERM-7440"> command pre-preparation</A><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-16-sect-5.shtml#chp-16-ITERM-7457"> functions</A><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-16-sect-2.shtml#chp-16-ITERM-7340"> operations</A><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-16-sect-1.shtml#chp-16-ITERM-7301"> registration</A><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-16-sect-3.shtml#chp-16-ITERM-7362"> request processing</A><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-16-sect-4.shtml#chp-16-ITERM-7447"> TCQ</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-14-sect-5.shtml#chp-14-ITERM-6788"> class_simple</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-14-sect-5.shtml#chp-14-ITERM-6798"> classes</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-2-sect-7.shtml#chp-2-ITERM-4261"> cleanup function</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-13-sect-1.shtml#chp-13-ITERM-6424"> configuration (USB)</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-14-sect-8.shtml#chp-14-ITERM-6919"> firmware</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7575"> flags for net_device structure</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-14-sect-5.shtml#chp-14-ITERM-6790"> full class</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-11-sect-3.shtml#chp-11-ITERM-6211"> interface-specific data types</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-14-sect-1.shtml#chp-14-ITERM-6638"> ksets</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-1.shtml#chp-17-ITERM-7473"> loopback</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-15.shtml#chp-17-ITERM-7873"> MII</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-1-sect-3.shtml#chp-1-ITERM-4026"> networks</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7555"> non-Ethernet</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;older<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-3-sect-4.shtml#chp-3-ITERM-4535"> char device registration</A><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-4-sect-3.shtml#chp-4-ITERM-4799"> /proc file implementation</A><br>&nbsp;&nbsp;&nbsp;&nbsp;parallel ports
 [See parallel ports]<br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-12-sect-1.shtml#chp-12-ITERM-6287"> PCI</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-5-sect-3.shtml#chp-5-ITERM-5000"> reader/writer semaphores</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-4-sect-3.shtml#chp-4-ITERM-4813"> seq_file</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-1.shtml#chp-17-ITERM-7471"> snull</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-5-sect-5.shtml#chp-5-ITERM-5021"> spinlocks</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-7-sect-4.shtml#chp-7-ITERM-5578"> timers</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-13-sect-1.shtml#chp-13-ITERM-6416"> USB</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-2-sect-4.shtml#chp-2-ITERM-4199"> version dependency</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-12-sect-4.shtml#chp-12-ITERM-6384"> VLB</A><br><A class="v2" HREF="chp-5-sect-6.shtml#chp-5-ITERM-5043"> internal functions (locking)</A><br><A class="v2" HREF="chp-3-sect-2.shtml#chp-3-ITERM-4368"> internal representation of device numbers</A><BR><A class="v2" HREF="chp-17.shtml#chp-17-ITERM-7466"> Internet protocol (IP)</A><br>interrupt handlers<br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-2.shtml#chp-10-ITERM-6077"> autodetecting IRQ numbers</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-5.shtml#chp-10-ITERM-6160"> sharing interrupts</A><br>interrupt mode<br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-7-sect-4.shtml#chp-7-ITERM-5568"> and asynchronous execution</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-7-sect-5.shtml#chp-7-ITERM-5598"> tasklets</A><br><A class="v2" HREF="chp-6-sect-2.shtml#chp-6-ITERM-5257"> interruptible sleeps</A><BR>interrupts<br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-18-sect-4.shtml#chp-18-ITERM-7985"> counts</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-2.shtml#chp-10-ITERM-6065"> file</A><br>&nbsp;&nbsp;&nbsp;&nbsp;handlers<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-6.shtml#chp-10-ITERM-6163"> I/O</A><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-3.shtml#chp-10-ITERM-6107"> implementation of</A><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-2.shtml#chp-10-ITERM-6028"> installation of</A><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-7.shtml#chp-10-ITERM-6173"> management</A><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-7.shtml#chp-17-ITERM-7740"> for network drivers</A><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-1.shtml#chp-10-ITERM-6023"> preparing parallel ports</A><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-2.shtml#chp-10-ITERM-6063"> /proc files for</A><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-7.shtml#chp-10-ITERM-6176"> registration</A><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-5.shtml#chp-10-ITERM-6142"> sharing</A><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-4.shtml#chp-10-ITERM-6131"> tasklets</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-4.shtml#chp-10-ITERM-6127"> top and bottom halves</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-2.shtml#chp-10-ITERM-6056"> installation at</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-8.shtml#chp-17-ITERM-7746"> mitigation of</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-7.shtml#chp-17-ITERM-7739"> for network drivers</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-12-sect-1.shtml#chp-12-ITERM-6349"> PCI</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-2.shtml#chp-10-ITERM-6060"> reports</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-5.shtml#chp-10-ITERM-6159"> shared interrupts and</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-7-sect-1.shtml#chp-7-ITERM-5473"> timers</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-18-sect-2.shtml#chp-18-ITERM-7938"> tty drivers</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-13-sect-3.shtml#chp-13-ITERM-6473"> urbs</A><BR><A class="v2" HREF="chp-11-sect-4.shtml#chp-11-ITERM-6218"> intervals of time (data type portability)</A><BR><A class="v2" HREF="chp-11-sect-1.shtml#chp-11-ITERM-6193"> intptr_t type (C99 standard)</A><br><A class="v2" HREF="chp-9-sect-2.shtml#chp-9-ITERM-5890"> inw function</A><br><A class="v2" HREF="chp-6-sect-7.shtml#chp-6-ITERM-5428"> _IOC_DIRBITS macro</A><br><A class="v2" HREF="chp-6-sect-7.shtml#chp-6-ITERM-5426"> _IOC_TYPEBITS macro</A><br><A class="v2" HREF="chp-6-sect-7.shtml#chp-6-ITERM-5427"> _IOC_SIZEBITS macro</A><BR><A class="v2" HREF="chp-6-sect-7.shtml#chp-6-ITERM-5425"> _IOC_NRBITS macro</A><BR><A class="v2" HREF="chp-6-sect-7.shtml#chp-6-ITERM-5430"> ioctl commands (creating)</A><BR><A class="v2" HREF="chp-18-sect-4.shtml#chp-18-ITERM-7976"> ioctl function (tty drivers)</A><br><A class="v2" HREF="chp-3-sect-3.shtml#chp-3-ITERM-4439"> ioctl method</A><A class="v2" HREF="chp-6-sect-1.shtml#chp-6-ITERM-5134"> 2nd</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-6-sect-1.shtml#chp-6-ITERM-5147"> using bitfields to define commands</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-16-sect-2.shtml#chp-16-ITERM-7354"> block drivers</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-6-sect-1.shtml#chp-6-ITERM-5203"> controlling devices without</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-12.shtml#chp-17-ITERM-7830"> customizing for networking</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-4-sect-3.shtml#chp-4-ITERM-4844"> debugging with</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7648"> network devices and</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-4-sect-2.shtml#chp-4-ITERM-4730"> TIOCLINUX command</A><br><A class="v2" HREF="chp-6-sect-1.shtml#chp-6-ITERM-5150"> ioctl-number.txt file</A><br><A class="v2" HREF="chp-6-sect-7.shtml#chp-6-ITERM-5421"> ioctl.h header file</A><A class="v2" HREF="chp-6-sect-1.shtml#chp-6-ITERM-5149"> 2nd</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-6-sect-1.shtml#chp-6-ITERM-5151"> setting up command numbers</A><br><A class="v2" HREF="chp-15-sect-4.shtml#chp-15-ITERM-7164"> IOMMU (I/O memory management unit)</A><A class="v2" HREF="chp-15-sect-1.shtml#chp-15-ITERM-6964"> 2nd</A><br><A class="v2" HREF="chp-8-sect-4.shtml#chp-8-ITERM-5774"> ioremap</A><BR><A class="v2" HREF="chp-8-sect-4.shtml#chp-8-ITERM-5785"> ioremap function</A><A class="v2" HREF="chp-9-sect-4.shtml#chp-9-ITERM-5972"> 2nd</A><A class="v2" HREF="chp-9-sect-5.shtml#chp-9-ITERM-6021"> 3rd</A><br><A class="v2" HREF="chp-9-sect-4.shtml#chp-9-ITERM-5987"> ioremap_nocache function</A><BR><A class="v2" HREF="chp-8-sect-4.shtml#chp-8-ITERM-5775"> iounmap function</A><A class="v2" HREF="chp-9-sect-4.shtml#chp-9-ITERM-5985"> 2nd</A><br><A class="v2" HREF="chp-17.shtml#chp-17-ITERM-7465"> IP (Internet protocol)</A><br><A class="v2" HREF="chp-17-sect-11.shtml#chp-17-ITERM-7810"> IP numbers resolving to physical addresses</A><br><A class="v2" HREF="chp-17-sect-6.shtml#chp-17-ITERM-7733"> ip_summed field (sk_buff)</A><A class="v2" HREF="chp-17-sect-10.shtml#chp-17-ITERM-7762"> 2nd</A><br><A class="v2" HREF="chp-10-sect-2.shtml#chp-10-ITERM-6035"> irq argument (interrupt number)</A><br><A class="v2" HREF="chp-10-sect-2.shtml#chp-10-ITERM-6094"> irq.h header file</A><br><A class="v2" HREF="chp-10-sect-2.shtml#chp-10-ITERM-6036"> irqreturn_t function</A><br>IRQs (interrupt request lines)<br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-2.shtml#chp-10-ITERM-6074"> autodetecting</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-2.shtml#chp-10-ITERM-6071"> statistics on</A><br>ISA<br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-15-sect-4.shtml#chp-15-ITERM-7235"> bus master DMA</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-15-sect-4.shtml#chp-15-ITERM-7237"> devices, DMA for</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-9-sect-2.shtml#chp-9-ITERM-5929"> I/O (pausing devices)</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-9-sect-4.shtml#chp-9-ITERM-5994"> memory (access)</A><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-9-sect-4.shtml#chp-9-ITERM-5993"> below 1 MB</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-15-sect-4.shtml#chp-15-ITERM-7234"> DMA for</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-12-sect-2.shtml#chp-12-ITERM-6357"> PCI</A><br><A class="v2" HREF="chp-9-sect-4.shtml#chp-9-ITERM-5998"> isa_readb function</A><br><A class="v2" HREF="chp-13-sect-1.shtml#chp-13-ITERM-6411"> ISOCHRONOUS endpoints (USB)</A><br><A class="v2" HREF="chp-13-sect-3.shtml#chp-13-ITERM-6481"> isochronous urbs (USB)</A><BR><A class="v2" HREF="chp-14-sect-4.shtml#chp-14-ITERM-6725"> iteration of buses</A><br><BR></TD></TR></table>
<table width="100%" border="0" cellspacing="0" cellpadding="0" bgcolor="#e6e6e6">
<tr >
<td class="v2" align="left" width="30%">
<a href="index_.shtml"> &#8678; prev </a>
</td>
<td class="v2" align="center" width="40%">
<a href="index.html" target=_parent style="text-decoration:none;text-underline:none"> &#8689; home </a>
</td>
<td class="v2" align="right" width="30%">
&nbsp;
</td>
</tr>
</table>
<script type="text/javascript" src="http://j.maxmind.com/app/geoip.js"></script>
<center>
<table width=100% height=90>
<tr style='display:none'>
<td style='display:xnone' id='banner' xalign=center style="background-image:url(/kernel_map.d/LKM3_2048.png);width:100%;height:90;opacity:0;filter:alpha(opacity=0);
cursor:pointer" onclick="top.location='http://www.makelinux.com/kernel_map?b'" /> 
</td> </tr>
<tr style='display:none'>
<td  id='banner2' style="opacity:0;filter:alpha(opacity=0);text-align:center;" /> 
<a target=_top href=http://www.makelinux.com/kernel_map_poster?b>
<span style="font-weight:bold"><span style="display:block;font-size:large" >Poster of Linux kernel</span>The best gift for a Linux geek</span>
</a>
</td> </tr>
<tr style='zdisplay:xnone' >
<td  id='banner3' align=center /> 
<a Xtarget=_top href="http://www.makelinux.com/kernel_map_poster?b"> <img target=_top src="http://www.makelinux.net/kernel_map.d/poster2.png" border=0></a>
</td></tr>
</table>
</center>
<script type='text/javascript' src='../common/fade.js'></script>
<script type=text/javascript>

	var banner = document.getElementById('banner');
	banner.style.backgroundPosition="50% 50%";
	banner.style.backgroundPosition=100*Math.random()+"% "+100*Math.random(100)+"%";
	//fade('banner');
    	//setTimeout("fade('banner')",1000);
    	//setTimeout("fade('banner2')",1000);
</script>

<script type="text/javascript">
var a = new Array();
a[0]='<a href=http://www.linuxdriver.co.il/>www.LinuxDriver.co.il - Embedded Linux solutions: Drivers, Media Streaming, Fast Boot. In Tel-Aviv</a>';
a[1]='<a href=http://www.MakeLinux.net/>www.MakeLinux.net - Embedded Linux solutions: Drivers, Media Streaming, Fast Boot</a>';
a[2]='<a href="http://www.amazon.com/gp/product/0672329468?ie=UTF8&tag=makelinux-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0672329468">New book <b>Linux Kernel Development</b> (3rd Edition) 2010</a><img src="http://www.assoc-amazon.com/e/ir?t=makelinux-20&l=as2&o=1&a=0672329468" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />';
a[3]='';
google_ad_width = 728;
google_ad_height = 1;
if ( 0) { 
document.write("<center>");
if (  geoip_country_code()=="IL" ) {
	if ( Math.random() > 0.5 ) document.write(a[0]+"<br>"); else document.write(a[2]);;
	google_ad_width = 728;
	google_ad_height = 1;
} else { 
	if ( Math.random() > 0.5 ) {
		if ( Math.random() > 0.5 ) document.write(a[1]+"<br>"); else document.write(a[2]);
		google_ad_width = 728;
		google_ad_height = 1;
	} else {
		google_ad_client = "pub-5656623102424572";
		/* 728x90, created 4/4/08 */
		google_ad_slot = "6613964975";
		google_ad_width = 728;
		google_ad_height = 100;
	}
}
	document.write("</center>");
}
</script>
<!--
<script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js"> </script>
-->



<script type="text/javascript" src="http://j.maxmind.com/app/geoip.js"></script>
<script type="text/javascript" >
{
	var os, br, ua = navigator.userAgent;

	if (ua.indexOf("Linux")!=-1) os="Linux";
	if (ua.indexOf("Windows")!=-1) os="Windows";
	if (ua.indexOf("Mac")!=-1) os="Mac";

	if (ua.indexOf("Gecko")!=-1) br="Gecko";
	if (ua.indexOf("Firefox")!=-1) br="Firefox";
	if (ua.indexOf("WebKit")!=-1) br="WebKit";
	if (ua.indexOf("MSIE")!=-1) br="MSIE";
	if (ua.indexOf("Safari")!=-1) br="Safari";
	if (ua.indexOf("Chrome")!=-1) br="Chrome";
	if (ua.indexOf("Konqueror")!=-1) br="Konqueror";
	if (ua.indexOf("Opera")!=-1) br="Opera";

	function query_var(query, variable) 
	{
		var vars = query.replace(/\?/g,"&").replace(/%20/g,"+").split("&");
		for (var i=0;i<vars.length;i++) {
			var pair = vars[i].split("=");
			if (pair[0] == variable) {
				return pair[1];
			}

		} 
	}
	var RQ="";
	q = query_var(top.document.referrer,'q');
	if ( q != undefined)
		RQ = ".&Q=" + q
	else if (top.document.referrer.length)
	
		RQ = ".&R=" + top.document.referrer;
	var traceimg= new Image();
	try {
		traceimg.src="http://const.homelinux.net/1.png?U="
			+ br + "-" + os 
			+"."+geoip_region_name().replace(/ /g,"_") 
			+"."+geoip_country_code()
			+ RQ ;
	} catch (e) {
	}
}
</script>


</body>
</html>
