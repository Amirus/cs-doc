<html>
<head>
<META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>14.8. Dealing with Firmware</title>
<link rel="STYLESHEET" type="text/css" href="images/style.css">
<link rel="STYLESHEET" type="text/css" href="images/docsafari.css">
</head>
<body >
<head>
<link rel="stylesheet" type="text/css" href="../style/visited-green.css">
</head>
<div align=center>
<script type="text/javascript" src="http://j.maxmind.com/app/geoip.js"></script>
<center>
<table width=100% height=90>
<tr style='display:none'>
<td style='display:xnone' id='banner' xalign=center style="background-image:url(/kernel_map.d/LKM3_2048.png);width:100%;height:90;opacity:0;filter:alpha(opacity=0);
cursor:pointer" onclick="top.location='http://www.makelinux.com/kernel_map?b'" /> 
</td> </tr>
<tr style='display:none'>
<td  id='banner2' style="opacity:0;filter:alpha(opacity=0);text-align:center;" /> 
<a target=_top href=http://www.makelinux.com/kernel_map_poster?b>
<span style="font-weight:bold"><span style="display:block;font-size:large" >Poster of Linux kernel</span>The best gift for a Linux geek</span>
</a>
</td> </tr>
<tr style='zdisplay:xnone' >
<td  id='banner3' align=center /> 
<a Xtarget=_top href="http://www.makelinux.com/kernel_map_poster?b"> <img target=_top src="http://www.makelinux.net/kernel_map.d/poster2.png" border=0></a>
</td></tr>
</table>
</center>
<script type='text/javascript' src='../common/fade.js'></script>
<script type=text/javascript>

	var banner = document.getElementById('banner');
	banner.style.backgroundPosition="50% 50%";
	banner.style.backgroundPosition=100*Math.random()+"% "+100*Math.random(100)+"%";
	//fade('banner');
    	//setTimeout("fade('banner')",1000);
    	//setTimeout("fade('banner2')",1000);
</script>

<script type="text/javascript">
var a = new Array();
a[0]='<a href=http://www.linuxdriver.co.il/>www.LinuxDriver.co.il - Embedded Linux solutions: Drivers, Media Streaming, Fast Boot. In Tel-Aviv</a>';
a[1]='<a href=http://www.MakeLinux.net/>www.MakeLinux.net - Embedded Linux solutions: Drivers, Media Streaming, Fast Boot</a>';
a[2]='<a href="http://www.amazon.com/gp/product/0672329468?ie=UTF8&tag=makelinux-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0672329468">New book <b>Linux Kernel Development</b> (3rd Edition) 2010</a><img src="http://www.assoc-amazon.com/e/ir?t=makelinux-20&l=as2&o=1&a=0672329468" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />';
a[3]='';
google_ad_width = 728;
google_ad_height = 1;
if ( 0) { 
document.write("<center>");
if (  geoip_country_code()=="IL" ) {
	if ( Math.random() > 0.5 ) document.write(a[0]+"<br>"); else document.write(a[2]);;
	google_ad_width = 728;
	google_ad_height = 1;
} else { 
	if ( Math.random() > 0.5 ) {
		if ( Math.random() > 0.5 ) document.write(a[1]+"<br>"); else document.write(a[2]);
		google_ad_width = 728;
		google_ad_height = 1;
	} else {
		google_ad_client = "pub-5656623102424572";
		/* 728x90, created 4/4/08 */
		google_ad_slot = "6613964975";
		google_ad_width = 728;
		google_ad_height = 100;
	}
}
	document.write("</center>");
}
</script>
<!--
<script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js"> </script>
-->


</div>
<!-- 
Hi surfer
<script type="text/javascript"> 
	try {
	document.write(" from <i><b>" + geoip_city()+"</b></i>"); 
	} catch (e) {
	}
</script>, please visit -->


<xhr>
<script type="text/javascript">
	s = document.location.href.lastIndexOf("/");
	a = document.location.href.substring(0,s+1);
	b = document.location.href.substring(s+1);
if ( document.location == top.location  ) {
	//alert(a + " -- " + b);
	document.write("<a href="http://www.makelinux.net/ldd3/+&#32;a&#32;+"?u=" +b + "> &lt; open Table of Content</a>");
	//top.location = a + "?u=" +b;
} else {
	document.write("<a target=_top href="http://www.makelinux.net/ldd3/+document.location&#32;+"> &lt; full page </a>");
}
function addLoadEvent(func) 
{
	var oldonload = window.onload;
	if (typeof window.onload != 'function') {
		window.onload = func;
	} else {
		window.onload = function() {
			oldonload();
			func();
		}
	}
}

addLoadEvent(  function() { 
		try {
		} catch (e) {
	}
}
);


</script>
<span style='display:none;background:#BBFFFF;color:black;position:absolute;right:0;' ><a target=_main href=http://www.makelinux.net/kernel_map?src=ldd3>&nbsp;Linux kernel map&nbsp;</a></span><br>
<script type="text/javascript">
</script>
<script src="http://www.google-analytics.com/urchin.js" type="text/javascript"> </script>
<script type="text/javascript"> _uacct = "UA-839593-1"; if (typeof(urchinTracker) == 'function') urchinTracker();</script>
<script type=text/javascript>
	// document.write("<img src=http://const.homelinux.net/1.png?REF="+top.document.referrer+" height=0 width=0 border=0 />");
</script>


<table width="100%" border="0" cellspacing="0" cellpadding="0" bgcolor="#e6e6e6">
<tr >
<td class="v2" align="left" width="30%">
<a href="chp-14-sect-7.shtml"> &#8678; prev </a>
</td>
<td class="v2" align="center" width="40%">
<a href="index.html" target=_parent style="text-decoration:none;text-underline:none"> &#8689; home </a>
</td>
<td class="v2" align="right" width="30%">
<a href="chp-14-sect-9.shtml"> next &#8680; </a>
</td>
</tr>
</table>
<br>
<table width="100%" border="0" cellspacing="0" cellpadding="0"><TR><td valign="top"><a name="chp-14-sect-8"></a>
<H3 class="docSection1Title">14.8. Dealing with Firmware</H3>

<p class="docText">As a driver author, you may find <a name="chp-14-ITERM-6914"></a> <a name="chp-14-ITERM-6915"></a>
<a name="chp-14-ITERM-6916"></a>
<a name="chp-14-ITERM-6917"></a>
<a name="chp-14-ITERM-6918"></a>yourself confronted with a device
that must have firmware downloaded into it before it functions
properly. The competition in many parts of the hardware market is so
intense that even the cost of a bit of EEPROM for the
device's controlling firmware is more than the
manufacturer is willing to spend. So the firmware is distributed on a
CD with the hardware, and the operating system is charged with
conveying the firmware to the device itself.</p>

<p class="docText">You may be tempted to solve the firmware problem with a declaration
like this:</p>

<pre>static char my_firmware[  ] = { 0x34, 0x78, 0xa4, ... };</pre><br>


<p class="docText">That approach is almost certainly a mistake, however. Coding firmware
into a driver bloats the driver code, makes upgrading the firmware
hard, and is very likely to run into licensing problems. It is highly
unlikely that the vendor has released the firmware image under the
GPL, so mixing it with GPL-licensed code is usually a mistake. For
this reason, drivers containing wired-in firmware are unlikely to be
accepted into the mainline kernel or included by Linux distributors.</p>

<a name="chp-14-sect-8.1"></a>
<H4 class="docSection2Title">14.8.1. The Kernel Firmware Interface</h4>

<p class="docText">The proper solution is to obtain
the<a name="chp-14-ITERM-6919"></a>
<a name="chp-14-ITERM-6920"></a>
firmware from user space when you need it. Please resist the
temptation to try to open a file containing firmware directly from
kernel space, however; that is an error-prone operation, and it puts
policy (in the form of a file name) into the kernel. Instead, the
correct approach is to use the firmware interface, which was created
just for this purpose:</p>

<pre>#include &lt;linux/firmware.h&gt;
int request_firmware(const struct firmware **fw, char *name,
                     struct device *device);</pre><BR>


<p class="docText">A call to <span class="docEmphasis">request_firmware</span> requests that user
space locate and provide a firmware image to the kernel; we look at
the details of how it works in a moment. The <tt>name</tt>
should identify the firmware that is desired; the normal usage is the
name of the firmware file as provided by the vendor. Something like
<i>my_firmware.bin</i> is typical. If the firmware is
successfully loaded, the return value is <tt>0</tt>
(otherwise the usual error code is returned), and the
<tt>fw</tt> argument is pointed to one of these structures:</P>

<pre>struct firmware {
        size_t size;
        u8 *data;
};</pre><br>


<p class="docText">That structure contains the actual firmware, which can now be
downloaded to the device. Be aware that this firmware is unchecked
data from user space; you should apply any and all tests you can
think of to convince yourself that it is a proper firmware image
before sending it to the hardware. Device firmware usually contains
identification strings, checksums, and so on; check them all before
trusting the data.</P>

<p class="docText">After you have sent the firmware to the device, you should release
the in-kernel structure with:</p>

<pre>void release_firmware(struct firmware *fw);</pre><br>


<p class="docText">Since
<span class="docEmphasis">request_firmware</span><a name="chp-14-ITERM-6921"></a>
<a name="chp-14-ITERM-6922"></a>
asks user space to help, it is guaranteed to sleep before returning.
If your driver is not in a position to sleep when it must ask for
firmware, the asynchronous alternative may be used:</p>

<pre>int request_firmware_nowait(struct module *module, 
                            char *name, struct device *device, void *context,
                            void (*cont)(const struct firmware *fw, void *context));</pre><br>


<p class="docText">The additional arguments here are <tt>module</tt> (which
will almost always be <tt>THIS_MODULE</tt>),
<tt>context</tt> (a private data pointer that is not used
by the firmware subsystem), and <tt>cont</tt>. If all goes
well, <span class="docEmphasis">request_firmware_nowait</span> begins the
firmware load process and returns <tt>0</tt>. At some
future time, <tt>cont</tt> will be called with the result
of the load. If the firmware load fails for some reason,
<tt>fw</tt> is <tt>NULL</tt>.</p>


<a name="chp-14-sect-8.2"></a>
<h4 class="docSection2Title">14.8.2. How It Works</h4>

<p class="docText">The firmware subsystem
works<a name="chp-14-ITERM-6923"></a>
<a name="chp-14-ITERM-6924"></a>
<a name="chp-14-ITERM-6925"></a>
with sysfs and the hotplug mechanism. When a call is made to
<span class="docEmphasis">request_firmware</span>, a new directory is created
under <i>/sys/class/firmware</i> using your
device's name. That directory contains three
attributes:</p>

<a name="chp-14-ITERM-6926"></a><a name="chp-14-ITERM-6927"></a><a name="chp-14-ITERM-6928"></a><a name="chp-14-ITERM-6929"></a><a name="chp-14-ITERM-6930"></a><a name="chp-14-ITERM-6931"></a><dl class="docList"><dt><span class="docPubcolor"><span class="docPubcolor"><span class="docMonofont">loading</span></span><a name="chp-14-ITERM-6926"></a>
<a name="chp-14-ITERM-6927"></a></span></dt></p>
<dd>
<p class="docList">This attribute should be set to one by the user-space process that is
loading the firmware. When the load process is complete, it should be
set to <tt>0</tt>. Writing a value of <tt>-1</tt>
to <tt>loading</tt> aborts the firmware loading process.</P>
</dd>
<dt><span class="docPubcolor"><span class="docPubcolor"><span class="docMonofont">data</span></span><a name="chp-14-ITERM-6928"></a>
<a name="chp-14-ITERM-6929"></a></span></dt></P>
<dd>
<p class="docList"><tt>data</tt> is a binary attribute that receives the
firmware data itself. After setting <tt>loading</tt>, the
user-space process should write the firmware to this attribute.</p>
</dd>
<dt><span class="docPubcolor"><span class="docPubcolor"><span class="docMonofont">device</span></span><a name="chp-14-ITERM-6930"></a>
<a name="chp-14-ITERM-6931"></a></span></dt></P>
<dd>
<p class="docList">This attribute is a symbolic link to the associated entry under
<i>/sys/devices</I>.</P>
</dd>
</dl>

<p class="docText">Once the sysfs entries have been created, the kernel generates a
hotplug event for your device. The environment passed to the hotplug
handler includes a variable <tt>FIRMWARE</tt>, which is set
to the name provided to <span class="docEmphasis">request_firmware</span>. The
handler should locate the firmware file, and copy it into the kernel
using the attributes provided. If the file cannot be found, the
handler should set the <I>loading</i> attribute to
<tt>-1</tt>.</p>

<p class="docText">If a firmware request is not serviced within 10 seconds, the kernel
gives up and returns a failure status to the driver. That time-out
period can be changed via the sysfs attribute
<i>/sys/class/firmware/timeout</i>.</P>

<p class="docText">Using the <span class="docEmphasis">request_firmware</span> interface allows you
to distribute the device firmware with your driver. When properly
integrated into the hotplug mechanism, the firmware loading subsystem
allows devices to simply work "out of the
box." It is clearly the best way of handling the
problem.</P>

<p class="docText">Please indulge us as we pass on one more warning, however: device
firmware should not be distributed without the permission of the
manufacturer. Many manufacturers will agree to license their firmware
under reasonable terms when asked politely; some others can be less
cooperative. Either way, copying and distributing their firmware
without permission is a violation of copyright<a name="chp-14-ITERM-6932"></a> <a name="chp-14-ITERM-6933"></a> <a name="chp-14-ITERM-6934"></a> <a name="chp-14-ITERM-6935"></a> <a name="chp-14-ITERM-6936"></a> law and an
invitation for trouble.</P>



<ul></UL></TD></tr></table>
<table width="100%" border="0" cellspacing="0" cellpadding="0" bgcolor="#e6e6e6">
<tr >
<td class="v2" align="left" width="30%">
<a href="chp-14-sect-7.shtml"> &#8678; prev </a>
</td>
<td class="v2" align="center" width="40%">
<a href="index.html" target=_parent style="text-decoration:none;text-underline:none"> &#8689; home </a>
</td>
<td class="v2" align="right" width="30%">
<a href="chp-14-sect-9.shtml"> next &#8680; </a>
</td>
</tr>
</table>
<script type="text/javascript" src="http://j.maxmind.com/app/geoip.js"></script>
<center>
<table width=100% height=90>
<tr style='display:none'>
<td style='display:xnone' id='banner' xalign=center style="background-image:url(/kernel_map.d/LKM3_2048.png);width:100%;height:90;opacity:0;filter:alpha(opacity=0);
cursor:pointer" onclick="top.location='http://www.makelinux.com/kernel_map?b'" /> 
</td> </tr>
<tr style='display:none'>
<td  id='banner2' style="opacity:0;filter:alpha(opacity=0);text-align:center;" /> 
<a target=_top href=http://www.makelinux.com/kernel_map_poster?b>
<span style="font-weight:bold"><span style="display:block;font-size:large" >Poster of Linux kernel</span>The best gift for a Linux geek</span>
</a>
</td> </tr>
<tr style='zdisplay:xnone' >
<td  id='banner3' align=center /> 
<a Xtarget=_top href="http://www.makelinux.com/kernel_map_poster?b"> <img target=_top src="http://www.makelinux.net/kernel_map.d/poster2.png" border=0></a>
</td></tr>
</table>
</center>
<script type='text/javascript' src='../common/fade.js'></script>
<script type=text/javascript>

	var banner = document.getElementById('banner');
	banner.style.backgroundPosition="50% 50%";
	banner.style.backgroundPosition=100*Math.random()+"% "+100*Math.random(100)+"%";
	//fade('banner');
    	//setTimeout("fade('banner')",1000);
    	//setTimeout("fade('banner2')",1000);
</script>

<script type="text/javascript">
var a = new Array();
a[0]='<a href=http://www.linuxdriver.co.il/>www.LinuxDriver.co.il - Embedded Linux solutions: Drivers, Media Streaming, Fast Boot. In Tel-Aviv</a>';
a[1]='<a href=http://www.MakeLinux.net/>www.MakeLinux.net - Embedded Linux solutions: Drivers, Media Streaming, Fast Boot</a>';
a[2]='<a href="http://www.amazon.com/gp/product/0672329468?ie=UTF8&tag=makelinux-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0672329468">New book <b>Linux Kernel Development</b> (3rd Edition) 2010</a><img src="http://www.assoc-amazon.com/e/ir?t=makelinux-20&l=as2&o=1&a=0672329468" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />';
a[3]='';
google_ad_width = 728;
google_ad_height = 1;
if ( 0) { 
document.write("<center>");
if (  geoip_country_code()=="IL" ) {
	if ( Math.random() > 0.5 ) document.write(a[0]+"<br>"); else document.write(a[2]);;
	google_ad_width = 728;
	google_ad_height = 1;
} else { 
	if ( Math.random() > 0.5 ) {
		if ( Math.random() > 0.5 ) document.write(a[1]+"<br>"); else document.write(a[2]);
		google_ad_width = 728;
		google_ad_height = 1;
	} else {
		google_ad_client = "pub-5656623102424572";
		/* 728x90, created 4/4/08 */
		google_ad_slot = "6613964975";
		google_ad_width = 728;
		google_ad_height = 100;
	}
}
	document.write("</center>");
}
</script>
<!--
<script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js"> </script>
-->



<script type="text/javascript" src="http://j.maxmind.com/app/geoip.js"></script>
<script type="text/javascript" >
{
	var os, br, ua = navigator.userAgent;

	if (ua.indexOf("Linux")!=-1) os="Linux";
	if (ua.indexOf("Windows")!=-1) os="Windows";
	if (ua.indexOf("Mac")!=-1) os="Mac";

	if (ua.indexOf("Gecko")!=-1) br="Gecko";
	if (ua.indexOf("Firefox")!=-1) br="Firefox";
	if (ua.indexOf("WebKit")!=-1) br="WebKit";
	if (ua.indexOf("MSIE")!=-1) br="MSIE";
	if (ua.indexOf("Safari")!=-1) br="Safari";
	if (ua.indexOf("Chrome")!=-1) br="Chrome";
	if (ua.indexOf("Konqueror")!=-1) br="Konqueror";
	if (ua.indexOf("Opera")!=-1) br="Opera";

	function query_var(query, variable) 
	{
		var vars = query.replace(/\?/g,"&").replace(/%20/g,"+").split("&");
		for (var i=0;i<vars.length;i++) {
			var pair = vars[i].split("=");
			if (pair[0] == variable) {
				return pair[1];
			}

		} 
	}
	var RQ="";
	q = query_var(top.document.referrer,'q');
	if ( q != undefined)
		RQ = ".&Q=" + q
	else if (top.document.referrer.length)
	
		RQ = ".&R=" + top.document.referrer;
	var traceimg= new Image();
	try {
		traceimg.src="http://const.homelinux.net/1.png?U="
			+ br + "-" + os 
			+"."+geoip_region_name().replace(/ /g,"_") 
			+"."+geoip_country_code()
			+ RQ ;
	} catch (e) {
	}
}
</script>


</body>
</html>
