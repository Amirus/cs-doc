<html>
<head>
<META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>index_S</title>
<link rel="STYLESHEET" type="text/css" href="images/style.css">
<link rel="STYLESHEET" type="text/css" href="images/docsafari.css">
</head>
<body >
<head>
<link rel="stylesheet" type="text/css" href="../style/visited-green.css">
</head>
<div align=center>
<script type="text/javascript" src="http://j.maxmind.com/app/geoip.js"></script>
<center>
<table width=100% height=90>
<tr style='display:none'>
<td style='display:xnone' id='banner' xalign=center style="background-image:url(/kernel_map.d/LKM3_2048.png);width:100%;height:90;opacity:0;filter:alpha(opacity=0);
cursor:pointer" onclick="top.location='http://www.makelinux.com/kernel_map?b'" /> 
</td> </tr>
<tr style='display:none'>
<td  id='banner2' style="opacity:0;filter:alpha(opacity=0);text-align:center;" /> 
<a target=_top href=http://www.makelinux.com/kernel_map_poster?b>
<span style="font-weight:bold"><span style="display:block;font-size:large" >Poster of Linux kernel</span>The best gift for a Linux geek</span>
</a>
</td> </tr>
<tr style='zdisplay:xnone' >
<td  id='banner3' align=center /> 
<a Xtarget=_top href="http://www.makelinux.com/kernel_map_poster?b"> <img target=_top src="http://www.makelinux.net/kernel_map.d/poster2.png" border=0></a>
</td></tr>
</table>
</center>
<script type='text/javascript' src='../common/fade.js'></script>
<script type=text/javascript>

	var banner = document.getElementById('banner');
	banner.style.backgroundPosition="50% 50%";
	banner.style.backgroundPosition=100*Math.random()+"% "+100*Math.random(100)+"%";
	//fade('banner');
    	//setTimeout("fade('banner')",1000);
    	//setTimeout("fade('banner2')",1000);
</script>

<script type="text/javascript">
var a = new Array();
a[0]='<a href=http://www.linuxdriver.co.il/>www.LinuxDriver.co.il - Embedded Linux solutions: Drivers, Media Streaming, Fast Boot. In Tel-Aviv</a>';
a[1]='<a href=http://www.MakeLinux.net/>www.MakeLinux.net - Embedded Linux solutions: Drivers, Media Streaming, Fast Boot</a>';
a[2]='<a href="http://www.amazon.com/gp/product/0672329468?ie=UTF8&tag=makelinux-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0672329468">New book <b>Linux Kernel Development</b> (3rd Edition) 2010</a><img src="http://www.assoc-amazon.com/e/ir?t=makelinux-20&l=as2&o=1&a=0672329468" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />';
a[3]='';
google_ad_width = 728;
google_ad_height = 1;
if ( 0) { 
document.write("<center>");
if (  geoip_country_code()=="IL" ) {
	if ( Math.random() > 0.5 ) document.write(a[0]+"<br>"); else document.write(a[2]);;
	google_ad_width = 728;
	google_ad_height = 1;
} else { 
	if ( Math.random() > 0.5 ) {
		if ( Math.random() > 0.5 ) document.write(a[1]+"<br>"); else document.write(a[2]);
		google_ad_width = 728;
		google_ad_height = 1;
	} else {
		google_ad_client = "pub-5656623102424572";
		/* 728x90, created 4/4/08 */
		google_ad_slot = "6613964975";
		google_ad_width = 728;
		google_ad_height = 100;
	}
}
	document.write("</center>");
}
</script>
<!--
<script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js"> </script>
-->


</div>
<!-- 
Hi surfer
<script type="text/javascript"> 
	try {
	document.write(" from <i><b>" + geoip_city()+"</b></i>"); 
	} catch (e) {
	}
</script>, please visit -->


<xhr>
<script type="text/javascript">
	s = document.location.href.lastIndexOf("/");
	a = document.location.href.substring(0,s+1);
	b = document.location.href.substring(s+1);
if ( document.location == top.location  ) {
	//alert(a + " -- " + b);
	document.write("<a href="http://www.makelinux.net/ldd3/+&#32;a&#32;+"?u=" +b + "> &lt; open Table of Content</a>");
	//top.location = a + "?u=" +b;
} else {
	document.write("<a target=_top href="http://www.makelinux.net/ldd3/+document.location&#32;+"> &lt; full page </a>");
}
function addLoadEvent(func) 
{
	var oldonload = window.onload;
	if (typeof window.onload != 'function') {
		window.onload = func;
	} else {
		window.onload = function() {
			oldonload();
			func();
		}
	}
}

addLoadEvent(  function() { 
		try {
		} catch (e) {
	}
}
);


</script>
<span style='display:none;background:#BBFFFF;color:black;position:absolute;right:0;' ><a target=_main href=http://www.makelinux.net/kernel_map?src=ldd3>&nbsp;Linux kernel map&nbsp;</a></span><br>
<script type="text/javascript">
</script>
<script src="http://www.google-analytics.com/urchin.js" type="text/javascript"> </script>
<script type="text/javascript"> _uacct = "UA-839593-1"; if (typeof(urchinTracker) == 'function') urchinTracker();</script>
<script type=text/javascript>
	// document.write("<img src=http://const.homelinux.net/1.png?REF="+top.document.referrer+" height=0 width=0 border=0 />");
</script>


<table width="100%" border="0" cellspacing="0" cellpadding="0" bgcolor="#e6e6e6">
<tr >
<td class="v2" align="left" width="30%">
<a href="index_.shtml"> &#8678; prev </a>
</td>
<td class="v2" align="center" width="40%">
<a href="index.html" target=_parent style="text-decoration:none;text-underline:none"> &#8689; home </a>
</td>
<td class="v2" align="right" width="30%">
&nbsp;
</td>
</tr>
</table>
<br>
<table width="100%" border="0" cellspacing="0" cellpadding="0"><tr><td valign="top" class="v2"><br><h2 class="docGlossaryTitle">Index</h2><br>
              [<a class="v1" href="index_SYMBOL.shtml">SYMBOL</a>]
            
              [<a class="v1" href="index_A.shtml">A</a>]
            
              [<a class="v1" href="index_B.shtml">B</a>]
            
              [<a class="v1" href="index_C.shtml">C</a>]
            
              [<a class="v1" href="index_D.shtml">D</a>]
            
              [<a class="v1" href="index_E.shtml">E</a>]
            
              [<a class="v1" href="index_F.shtml">F</a>]
            
              [<a class="v1" href="index_G.shtml">G</a>]
            
              [<a class="v1" href="index_H.shtml">H</a>]
            
              [<a class="v1" href="index_I.shtml">I</a>]
            
              [<a class="v1" href="index_J.shtml">J</a>]
            
              [<a class="v1" href="index_K.shtml">K</a>]
            
              [<a class="v1" href="index_L.shtml">L</a>]
            
              [<a class="v1" href="index_M.shtml">M</a>]
            
              [<a class="v1" href="index_N.shtml">N</a>]
            
              [<a class="v1" href="index_O.shtml">O</a>]
            
              [<a class="v1" href="index_P.shtml">P</a>]
            
              [<a class="v1" href="index_Q.shtml">Q</a>]
            
              [<a class="v1" href="index_R.shtml">R</a>]
            
              [<a class="v1" href="index_S.shtml" style="font-weight:bold;">S</a>]
            
              [<a class="v1" href="index_T.shtml">T</a>]
            
              [<a class="v1" href="index_U.shtml">U</a>]
            
              [<a class="v1" href="index_V.shtml">V</a>]
            
              [<a class="v1" href="index_W.shtml">W</a>]
            
              [<a class="v1" href="index_X.shtml">X</a>]
            
              [<a class="v1" href="index_Z.shtml">Z</a>]
            <br><br><A class="v2" HREF="chp-14-sect-7.shtml#chp-14-ITERM-6893"> S/390 architecture</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-9-sect-2.shtml#chp-9-ITERM-5943"> porting and</A><br><A class="v2" HREF="chp-10-sect-7.shtml#chp-10-ITERM-6177"> SA_INTERRUPT flag</A><A class="v2" HREF="chp-10-sect-2.shtml#chp-10-ITERM-6044"> 2nd</A><BR><A class="v2" HREF="chp-10-sect-7.shtml#chp-10-ITERM-6180"> SA_SAMPLE_RANDOM flag</A><A class="v2" HREF="chp-10-sect-2.shtml#chp-10-ITERM-6048"> 2nd</A><BR><A class="v2" HREF="chp-10-sect-2.shtml#chp-10-ITERM-6046"> SA_SHIRQ flag</A><A class="v2" HREF="chp-10-sect-7.shtml#chp-10-ITERM-6179"> 2nd</A><A class="v2" HREF="chp-10-sect-5.shtml#chp-10-ITERM-6145"> 3rd</A><br><A class="v2" HREF="chp-4-sect-5.shtml#chp-4-ITERM-4908"> SAK (secure attention key) function</A><br><A class="v2" HREF="chp-1-sect-6.shtml#chp-1-ITERM-4077"> sample programs, obtaining</A><br><A class="v2" HREF="chp-14-sect-7.shtml#chp-14-ITERM-6844"> /sbin/hotplug utility</A><BR>sbull drivers<br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-16-sect-1.shtml#chp-16-ITERM-7324"> initialization</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-16-sect-3.shtml#chp-16-ITERM-7366"> request method</A><BR><A class="v2" HREF="chp-16-sect-2.shtml#chp-16-ITERM-7356"> sbull ioctl method</A><BR><A class="v2" HREF="chp-16-sect-1.shtml#chp-16-ITERM-7330"> sbull_request function</A><br><A class="v2" HREF="chp-12-sect-5.shtml#chp-12-ITERM-6388"> SBus</A><br>scatter/gather<br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-15-sect-4.shtml#chp-15-ITERM-7211"> DMA mappings</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-5.shtml#chp-17-ITERM-7724"> I/O</A><BR>scatterlists<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-15-sect-4.shtml#chp-15-ITERM-7216"> mapping</A><A class="v2" HREF="chp-15-sect-4.shtml#chp-15-ITERM-7219"> 2nd</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-15-sect-5.shtml#chp-15-ITERM-7293"> structure</A><br><A class="v2" HREF="chp-7-sect-1.shtml#chp-7-ITERM-5479"> sched.h header file</A><A class="v2" HREF="chp-2-sect-10.shtml#chp-2-ITERM-4314"> 2nd</A><BR><A class="v2" HREF="chp-6-sect-7.shtml#chp-6-ITERM-5455"> schedule function</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-7-sect-3.shtml#chp-7-ITERM-5535"> execution of code (delaying)</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-4-sect-5.shtml#chp-4-ITERM-4895"> preventing endless loops with</A><br><A class="v2" HREF="chp-7-sect-3.shtml#chp-7-ITERM-5543"> schedule_timeout function</A><br><A class="v2" HREF="chp-16-sect-3.shtml#chp-16-ITERM-7378"> schedulers (I/O)</A><br><A class="v2" HREF="chp-7-sect-4.shtml#chp-7-ITERM-5566"> scheduling kernel timers</A><BR><A class="v2" HREF="chp-14-sect-7.shtml#chp-14-ITERM-6897"> scripts (hotplug)</A><br>SCSI<br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-14-sect-7.shtml#chp-14-ITERM-6890"> devices</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-1-sect-3.shtml#chp-1-ITERM-4029"> modules</A><br><A class="v2" HREF="chp-3.shtml#chp-3-ITERM-4330"> scull</A><A class="v2" HREF="chp-3-sect-2.shtml#chp-3-ITERM-4390"> 2nd</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-3-sect-8.shtml#chp-3-ITERM-4640"> char drivers</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;concurrency
 [See concurrency]<br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-3-sect-1.shtml#chp-3-ITERM-4335"> design of</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-3-sect-4.shtml#chp-3-ITERM-4533"> device registration</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-6-sect-1.shtml#chp-6-ITERM-5152"> drivers (example)</A><A class="v2" HREF="chp-4-sect-2.shtml#chp-4-ITERM-4762"> 2nd</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-3-sect-3.shtml#chp-3-ITERM-4413"> file operations</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-3-sect-3.shtml#chp-3-ITERM-4519"> inode structure</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-5-sect-3.shtml#chp-5-ITERM-4973"> locking (adding)</A><br>&nbsp;&nbsp;&nbsp;&nbsp;memory<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-5-sect-1.shtml#chp-5-ITERM-4942"> troubleshooting</A><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-3-sect-6.shtml#chp-3-ITERM-4570"> usage</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-4-sect-3.shtml#chp-4-ITERM-4821"> next method</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-3-sect-5.shtml#chp-3-ITERM-4546"> open method</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-3-sect-6.shtml#chp-3-ITERM-4579"> pointers</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-5-sect-1.shtml#chp-5-ITERM-4951"> race conditions</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-3-sect-7.shtml#chp-3-ITERM-4594"> read method</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-4-sect-3.shtml#chp-4-ITERM-4797"> read_proc method</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-3-sect-7.shtml#chp-3-ITERM-4630"> readv calls</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-3-sect-5.shtml#chp-3-ITERM-4563"> release method</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-5-sect-3.shtml#chp-5-ITERM-4995"> semaphores</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-4-sect-3.shtml#chp-4-ITERM-4827"> show method</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-4-sect-3.shtml#chp-4-ITERM-4824"> stop method</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-3-sect-7.shtml#chp-3-ITERM-4596"> write method</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-3-sect-7.shtml#chp-3-ITERM-4632"> writev calls</A><BR><A class="v2" HREF="chp-3.shtml#chp-3-ITERM-4328"> scull driver (example)</A><br><A class="v2" HREF="chp-6-sect-6.shtml#chp-6-ITERM-5415"> scull_cleanup function</A><BR><A class="v2" HREF="chp-6-sect-2.shtml#chp-6-ITERM-5258"> scull_getwritespace function</A><BR><A class="v2" HREF="chp-8-sect-2.shtml#chp-8-ITERM-5733"> scullc driver (example)</A><BR>scullp<br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-8-sect-3.shtml#chp-8-ITERM-5759"> example</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-15-sect-2.shtml#chp-15-ITERM-7097"> mmap implementations</A><br><A class="v2" HREF="chp-6-sect-2.shtml#chp-6-ITERM-5249"> scullpipe devices (example)</A><br><A class="v2" HREF="chp-6-sect-6.shtml#chp-6-ITERM-5390"> scullsingle device</A><BR><A class="v2" HREF="chp-6-sect-6.shtml#chp-6-ITERM-5398"> sculluid code</A><BR><A class="v2" HREF="chp-8-sect-4.shtml#chp-8-ITERM-5787"> scullv driver (example)</A><A class="v2" HREF="chp-8-sect-7.shtml#chp-8-ITERM-5818"> 2nd</A><BR><A class="v2" HREF="chp-12-sect-8.shtml#chp-12-ITERM-6398"> searching PCI drivers</A><br><A class="v2" HREF="chp-16-sect-3.shtml#chp-16-ITERM-7420"> sector_t bi_sector field (bio structure)</A><BR><A class="v2" HREF="chp-16-sect-1.shtml#chp-16-ITERM-7317"> sector_t capacity field (gendisk)</A><BR><A class="v2" HREF="chp-16-sect-3.shtml#chp-16-ITERM-7372"> sector_t sector field (request structure)</A><br><A class="v2" HREF="chp-16-sect-1.shtml#chp-16-ITERM-7332"> sectors (size of)</A><br><A class="v2" HREF="chp-4-sect-5.shtml#chp-4-ITERM-4906"> secure attention key (SAK) function</A><br><A class="v2" HREF="chp-1-sect-4.shtml#chp-1-ITERM-4045"> security</A><A class="v2" HREF="chp-1-sect-4.shtml#chp-1-ITERM-4046"> 2nd</A><br><A class="v2" HREF="chp-6-sect-5.shtml#chp-6-ITERM-5376"> seeking devices</A><BR><A class="v2" HREF="chp-6-sect-3.shtml#chp-6-ITERM-5286"> select method</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-3-sect-3.shtml#chp-3-ITERM-4436"> poll method and</A><br><A class="v2" HREF="chp-5-sect-3.shtml#chp-5-ITERM-4976"> semaphores</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-5-sect-4.shtml#chp-5-ITERM-5005"> completion</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-5-sect-3.shtml#chp-5-ITERM-4984"> implementation</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-5-sect-3.shtml#chp-5-ITERM-4997"> reader/writer</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-5-sect-3.shtml#chp-5-ITERM-4983"> unlocking</A><br><A class="v2" HREF="chp-3-sect-3.shtml#chp-3-ITERM-4464"> sendfile system</A><BR><A class="v2" HREF="chp-3-sect-3.shtml#chp-3-ITERM-4465"> sendpage system</A><br><A class="v2" HREF="chp-4-sect-3.shtml#chp-4-ITERM-4812"> seq_file interface</A><br><A class="v2" HREF="chp-5-sect-7.shtml#chp-5-ITERM-5121"> seqlocks</A><br><A class="v2" HREF="chp-14-sect-7.shtml#chp-14-ITERM-6851"> SEQNUM variable</A><br><A class="v2" HREF="chp-5-sect-1.shtml#chp-5-ITERM-4949"> sequences (race conditions)</A><br><A class="v2" HREF="chp-18-sect-4.shtml#chp-18-ITERM-7981"> serial line configuration</A><br><A class="v2" HREF="chp-18-sect-4.shtml#chp-18-ITERM-7987"> serial_icounter_struct structure</A><br><A class="v2" HREF="chp-5-sect-7.shtml#chp-5-ITERM-5100"> set_bit operation</A><br><A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7638"> set_config method</A><br><A class="v2" HREF="chp-15-sect-4.shtml#chp-15-ITERM-7258"> set_dma_addr function</A><br><A class="v2" HREF="chp-15-sect-4.shtml#chp-15-ITERM-7260"> set_dma_count function</A><br><A class="v2" HREF="chp-15-sect-4.shtml#chp-15-ITERM-7256"> set_dma_mode function</A><br><A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7651"> set_mac_address method</A><br><A class="v2" HREF="chp-9-sect-1.shtml#chp-9-ITERM-5876"> set_mb function</A><BR><A class="v2" HREF="chp-17-sect-14.shtml#chp-17-ITERM-7864"> set_multicast_list function</A><br><A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7616"> set_multicast_list method</A><A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7649"> 2nd</A><BR><A class="v2" HREF="chp-9-sect-1.shtml#chp-9-ITERM-5872"> set_rmb function</A><BR><A class="v2" HREF="chp-18-sect-3.shtml#chp-18-ITERM-7959"> set_termios function</A><br><A class="v2" HREF="chp-9-sect-1.shtml#chp-9-ITERM-5874"> set_wmb function</A><br><A class="v2" HREF="chp-4-sect-2.shtml#chp-4-ITERM-4732"> setconsole program</A><br><A class="v2" HREF="chp-6-sect-1.shtml#chp-6-ITERM-5208"> setterm program</A><BR><A class="v2" HREF="chp-4-sect-3.shtml#chp-4-ITERM-4817"> sfile argument</A><br><A class="v2" HREF="chp-15-sect-5.shtml#chp-15-ITERM-7295"> sg_dma_address function</A><BR><A class="v2" HREF="chp-15-sect-4.shtml#chp-15-ITERM-7222"> sg_dma_address macro</A><BR><A class="v2" HREF="chp-15-sect-5.shtml#chp-15-ITERM-7297"> sg_dma_len function</A><BR><A class="v2" HREF="chp-15-sect-4.shtml#chp-15-ITERM-7224"> sg_dma_len macro</A><br>sharing<br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-5-sect-2.shtml#chp-5-ITERM-4957"> code</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-5.shtml#chp-10-ITERM-6143"> interrupt handlers</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-7-sect-6.shtml#chp-7-ITERM-5624"> queues</A><BR>short delays<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-7-sect-3.shtml#chp-7-ITERM-5557"> sleeps</A><BR><A class="v2" HREF="chp-9-sect-3.shtml#chp-9-ITERM-5958"> short driver (example)</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-9-sect-4.shtml#chp-9-ITERM-5990"> accessing I/O memory</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-3.shtml#chp-10-ITERM-6112"> implementing interrupt handlers</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-2.shtml#chp-10-ITERM-6057"> installing interrupt handlers</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-2.shtml#chp-10-ITERM-6090"> probing</A><br><A class="v2" HREF="chp-10-sect-2.shtml#chp-10-ITERM-6086"> short module</A><br><A class="v2" HREF="chp-10-sect-6.shtml#chp-10-ITERM-6165"> shortprint drivers</A><br><A class="v2" HREF="chp-14-sect-4.shtml#chp-14-ITERM-6776"> show function</A><BR>show method<br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-14-sect-2.shtml#chp-14-ITERM-6662"> kobjects</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-4-sect-3.shtml#chp-4-ITERM-4825"> seq_file interface</A><BR><A class="v2" HREF="chp-2-sect-7.shtml#chp-2-ITERM-4255"> shutdown</A><A class="v2" HREF="chp-14.shtml#chp-14-ITERM-6599"> 2nd</A><br><A class="v2" HREF="chp-6-sect-4.shtml#chp-6-ITERM-5356"> SIGIO signal</A><br><A class="v2" HREF="chp-6-sect-2.shtml#chp-6-ITERM-5251"> signal handling</A><BR>Simple Character Utility for Loading Localitie
 [See scull]<br>Simple Hardware Operations and Raw Tests
 [See short driver]<BR><A class="v2" HREF="chp-6-sect-2.shtml#chp-6-ITERM-5227"> simple sleeping</A><br><A class="v2" HREF="chp-6-sect-6.shtml#chp-6-ITERM-5384"> single-open devices</A><br><A class="v2" HREF="chp-15-sect-4.shtml#chp-15-ITERM-7206"> single-page streaming mappings</A><br><A class="v2" HREF="chp-17-sect-12.shtml#chp-17-ITERM-7841"> SIOCDEVPRIVATE commands</A><br><A class="v2" HREF="chp-17-sect-12.shtml#chp-17-ITERM-7840"> SIOCSIFADDR command</A><br><A class="v2" HREF="chp-17-sect-12.shtml#chp-17-ITERM-7839"> SIOCSIFMAP command</A><br>size<br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-11-sect-2.shtml#chp-11-ITERM-6197"> data explicitly</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-11-sect-2.shtml#chp-11-ITERM-6200"> explicit</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-8-sect-1.shtml#chp-8-ITERM-5696"> kmalloc argument</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-11-sect-4.shtml#chp-11-ITERM-6225"> pages</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-9-sect-2.shtml#chp-9-ITERM-5880"> ports</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-16-sect-1.shtml#chp-16-ITERM-7333"> of sectors</A><br>sk_buff structure<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-10.shtml#chp-17-ITERM-7760"> fields for</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-5.shtml#chp-17-ITERM-7704"> transmitting packets</A><BR><A class="v2" HREF="chp-17-sect-10.shtml#chp-17-ITERM-7797"> skb_headlen function</A><BR><A class="v2" HREF="chp-17-sect-10.shtml#chp-17-ITERM-7789"> skb_headroom function</A><br><A class="v2" HREF="chp-17-sect-10.shtml#chp-17-ITERM-7795"> skb_is_nonlinear functions</A><br><A class="v2" HREF="chp-17-sect-10.shtml#chp-17-ITERM-7793"> skb_pull function</A><br><A class="v2" HREF="chp-17-sect-10.shtml#chp-17-ITERM-7784"> skb_push function</A><BR><A class="v2" HREF="chp-17-sect-10.shtml#chp-17-ITERM-7782"> skb_put function</A><br><A class="v2" HREF="chp-17-sect-10.shtml#chp-17-ITERM-7791"> skb_reserve function</A><BR><A class="v2" HREF="chp-17-sect-10.shtml#chp-17-ITERM-7787"> skb_tailroom function</A><BR><A class="v2" HREF="chp-17-sect-5.shtml#chp-17-ITERM-7705"> skbuff.h header file</A><BR><A class="v2" HREF="chp-8-sect-2.shtml#chp-8-ITERM-5718"> SLAB_CACHE_DMA flag</A><br><A class="v2" HREF="chp-8-sect-2.shtml#chp-8-ITERM-5724"> SLAB_CTOR_ATOMIC flag</A><br><A class="v2" HREF="chp-8-sect-2.shtml#chp-8-ITERM-5725"> SLAB_CTOR_CONSTRUCTOR flag</A><br><A class="v2" HREF="chp-8-sect-2.shtml#chp-8-ITERM-5713"> SLAB_HWCACHE_ALIGN flag</A><br><A class="v2" HREF="chp-8-sect-2.shtml#chp-8-ITERM-5711"> SLAB_NO_REAP flag</A><BR><A class="v2" HREF="chp-6-sect-2.shtml#chp-6-ITERM-5266"> sleep_on function</A><BR>sleeps<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-5-sect-3.shtml#chp-5-ITERM-4980"> locking</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-6-sect-2.shtml#chp-6-ITERM-5253"> manual</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-6-sect-2.shtml#chp-6-ITERM-5224"> processes</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-7-sect-3.shtml#chp-7-ITERM-5556"> short delays</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-5-sect-5.shtml#chp-5-ITERM-5025"> spinlocks</A><br><A class="v2" HREF="chp-4-sect-3.shtml#chp-4-ITERM-4788"> slow downs (avoiding)</A><br><A class="v2" HREF="chp-10-sect-2.shtml#chp-10-ITERM-6096"> slow interrupt handlers</A><br><A class="v2" HREF="chp-2-sect-3.shtml#chp-2-ITERM-4154"> SMP (symmetric multiprocessor) systems</A><BR><A class="v2" HREF="chp-17-sect-1.shtml#chp-17-ITERM-7477"> snullnet0 (IP number)</A><br><A class="v2" HREF="chp-17-sect-10.shtml#chp-17-ITERM-7759"> socket buffers</A><A class="v2" HREF="chp-17-sect-5.shtml#chp-17-ITERM-7703"> 2nd</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-6.shtml#chp-17-ITERM-7727"> allocation</A><BR><A class="v2" HREF="chp-1-sect-5.shtml#chp-1-ITERM-4059"> software</A> [See also applications versus kernel modules]<br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-7-sect-3.shtml#chp-7-ITERM-5550"> loops</A><br>&nbsp;&nbsp;&nbsp;&nbsp;versions
 [See versions, numbering]<BR><A class="v2" HREF="chp-9-sect-4.shtml#chp-9-ITERM-5982"> software-mapped I/O memory (ioremap function)</A><br><A class="v2" HREF="chp-9-sect-2.shtml#chp-9-ITERM-5946"> SPARC architecture</A><BR><A class="v2" HREF="chp-11-sect-4.shtml#chp-11-ITERM-6245"> SPARC64 platform (data alignment)</A><br><A class="v2" HREF="chp-3-sect-2.shtml#chp-3-ITERM-4352"> special files</A><br>spinlocks<br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-15-sect-4.shtml#chp-15-ITERM-7250"> dma_spin_lock</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-5.shtml#chp-17-ITERM-7708"> hard_start_xmit function</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-5-sect-5.shtml#chp-5-ITERM-5028"> releasing</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7673"> xmit_lock function</A><br><A class="v2" HREF="chp-1-sect-2.shtml#chp-1-ITERM-3979"> splitting kernels</A><br><A class="v2" HREF="chp-2-sect-5.shtml#chp-2-ITERM-4223"> stacking modules</A><A class="v2" HREF="chp-2-sect-5.shtml#chp-2-ITERM-4232"> 2nd</A><br><A class="v2" HREF="chp-11-sect-1.shtml#chp-11-ITERM-6182"> standard C data types</A><br><A class="v2" HREF="chp-4-sect-3.shtml#chp-4-ITERM-4815"> start method</A><br><A class="v2" HREF="chp-10-sect-2.shtml#chp-10-ITERM-6067"> stat file</A><br><A class="v2" HREF="chp-16-sect-3.shtml#chp-16-ITERM-7427"> state of request processing</A><br>statements<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-2-sect-7.shtml#chp-2-ITERM-4270"> goto</A><br>&nbsp;&nbsp;&nbsp;&nbsp;printk
 [See printk function]<BR>&nbsp;&nbsp;&nbsp;&nbsp;switch<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-6-sect-1.shtml#chp-6-ITERM-5144"> with ioctl method</A><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-6-sect-1.shtml#chp-6-ITERM-5154"> return values</A><br><A class="v2" HREF="chp-5-sect-6.shtml#chp-5-ITERM-5042"> static functions (locking)</A><br><A class="v2" HREF="chp-3-sect-2.shtml#chp-3-ITERM-4381"> static numbers, assignment of</A><BR>statistics<br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-8-sect-2.shtml#chp-8-ITERM-5731"> on caches</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-2.shtml#chp-10-ITERM-6070"> on interrupts</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-13.shtml#chp-17-ITERM-7847"> on network drivers</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7637"> on network interfaces</A><A class="v2" HREF="chp-17-sect-13.shtml#chp-17-ITERM-7850"> 2nd</A><A class="v2" HREF="chp-17-sect-2.shtml#chp-17-ITERM-7527"> 3rd</A><br><A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7668"> status information</A><br><A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7622"> stop method</A><A class="v2" HREF="chp-4-sect-3.shtml#chp-4-ITERM-4822"> 2nd</A><br><A class="v2" HREF="chp-14-sect-2.shtml#chp-14-ITERM-6664"> store method (kobjects)</A><br><A class="v2" HREF="chp-4-sect-4.shtml#chp-4-ITERM-4855"> strace command</A><BR><A class="v2" HREF="chp-6-sect-2.shtml#chp-6-ITERM-5273"> strace tool</A><BR>streaming<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-15-sect-4.shtml#chp-15-ITERM-7181"> DMA mappings</A><A class="v2" HREF="chp-15-sect-4.shtml#chp-15-ITERM-7174"> 2nd</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-15-sect-4.shtml#chp-15-ITERM-7208"> single-page mappings</A><BR><A class="v2" HREF="chp-9-sect-5.shtml#chp-9-ITERM-6018"> string operations</A><A class="v2" HREF="chp-9-sect-2.shtml#chp-9-ITERM-5902"> 2nd</A><BR><A class="v2" HREF="chp-16-sect-1.shtml#chp-16-ITERM-7314"> struct block_device_operations *fops field (gendisk)</A><br><A class="v2" HREF="chp-14-sect-4.shtml#chp-14-ITERM-6752"> struct bus_type *bus field</A><br><A class="v2" HREF="chp-3-sect-3.shtml#chp-3-ITERM-4524"> struct cdev *i_cdev (inode structure field)</A><br><A class="v2" HREF="chp-3-sect-3.shtml#chp-3-ITERM-4514"> struct dentry *f_dentry (struct file field)</A><br><A class="v2" HREF="chp-14-sect-4.shtml#chp-14-ITERM-6749"> struct device *parent field</A><BR><A class="v2" HREF="chp-14-sect-4.shtml#chp-14-ITERM-6748"> struct device fields</A><br><A class="v2" HREF="chp-14-sect-4.shtml#chp-14-ITERM-6753"> struct device_driver *driver field</A><br><A class="v2" HREF="chp-14-sect-4.shtml#chp-14-ITERM-6765"> struct device_driver structure</A><BR><A class="v2" HREF="chp-3-sect-3.shtml#chp-3-ITERM-4483"> struct file</A><br><A class="v2" HREF="chp-3-sect-3.shtml#chp-3-ITERM-4506"> struct file_operations *f_op (struct file field)</A><br><A class="v2" HREF="chp-13-sect-4.shtml#chp-13-ITERM-6559"> struct file_operations *fops variable (USB)</A><BR><A class="v2" HREF="chp-14-sect-4.shtml#chp-14-ITERM-6750"> struct kobject kobj field</A><br><A class="v2" HREF="chp-13-sect-4.shtml#chp-13-ITERM-6532"> struct module *owner function</A><BR><A class="v2" HREF="chp-3-sect-3.shtml#chp-3-ITERM-4420"> struct module *owner method</A><br><A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7540"> struct net_device *next field (net_device structure)</A><br><A class="v2" HREF="chp-12-sect-1.shtml#chp-12-ITERM-6314"> struct pci_device_id structure (PCI)</A><br><A class="v2" HREF="chp-16-sect-3.shtml#chp-16-ITERM-7368"> struct request structure</A><br><A class="v2" HREF="chp-16-sect-1.shtml#chp-16-ITERM-7315"> struct request_queue *queue field (gendisk)</A><br><A class="v2" HREF="chp-3-sect-6.shtml#chp-3-ITERM-4583"> struct scull_qset structure</A><br><A class="v2" HREF="chp-18-sect-1.shtml#chp-18-ITERM-7901"> struct termios structure (tty drivers)</A><br><A class="v2" HREF="chp-7-sect-2.shtml#chp-7-ITERM-5509"> struct timeval pointer</A><br><A class="v2" HREF="chp-18-sect-2.shtml#chp-18-ITERM-7946"> struct tty_flip_buffer structure</A><br><A class="v2" HREF="chp-13-sect-3.shtml#chp-13-ITERM-6446"> struct urb structure</A><br><A class="v2" HREF="chp-13-sect-3.shtml#chp-13-ITERM-6449"> struct usb_device *dev field (USB)</A><br><A class="v2" HREF="chp-13-sect-4.shtml#chp-13-ITERM-6507"> struct usb_device_id structure (USB)</A><br><A class="v2" HREF="chp-13-sect-4.shtml#chp-13-ITERM-6543"> struct usb_driver structure</A><br><A class="v2" HREF="chp-13-sect-1.shtml#chp-13-ITERM-6418"> struct usb_host_interface *altsetting field (USB)</A><BR><A class="v2" HREF="chp-13-sect-1.shtml#chp-13-ITERM-6420"> struct usb_host_interface *cur_altsetting field (USB)</A><br><A class="v2" HREF="chp-13-sect-4.shtml#chp-13-ITERM-6553"> struct usb_interface structure</A><BR><A class="v2" HREF="chp-13-sect-3.shtml#chp-13-ITERM-6465"> struct usb_iso_packet_descriptor iso_frame_desc field (USB)</A><BR>structures<br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-14-sect-2.shtml#chp-14-ITERM-6675"> bin_attribute</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-16-sect-3.shtml#chp-16-ITERM-7419"> bio</A><A class="v2" HREF="chp-16-sect-3.shtml#chp-16-ITERM-7433"> 2nd</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-14-sect-4.shtml#chp-14-ITERM-6711"> bus_type</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-3-sect-4.shtml#chp-3-ITERM-4532"> cdev configuration</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-3-sect-3.shtml#chp-3-ITERM-4406"> data</A><A class="v2" HREF="chp-3-sect-3.shtml#chp-3-ITERM-4417"> 2nd</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-14.shtml#chp-17-ITERM-7861"> dev_mc_list</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-14-sect-4.shtml#chp-14-ITERM-6761"> devices</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-14-sect-4.shtml#chp-14-ITERM-6768"> drivers</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-15-sect-2.shtml#chp-15-ITERM-7065"> file_operations (mmap method and)</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-16-sect-1.shtml#chp-16-ITERM-7310"> gendisk</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-12.shtml#chp-17-ITERM-7837"> ifreq</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-14-sect-1.shtml#chp-14-ITERM-6619"> kobjects</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-14-sect-3.shtml#chp-14-ITERM-6701"> kset_hotplug_ops</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-14-sect-4.shtml#chp-14-ITERM-6771"> ldd_driver</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-3.shtml#chp-17-ITERM-7537"> net_device</A><A class="v2" HREF="chp-17-sect-2.shtml#chp-17-ITERM-7507"> 2nd</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-13.shtml#chp-17-ITERM-7852"> net_device_stats</A><A class="v2" HREF="chp-17-sect-2.shtml#chp-17-ITERM-7529"> 2nd</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-3-sect-4.shtml#chp-3-ITERM-4527"> registration</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-15-sect-5.shtml#chp-15-ITERM-7294"> scatterlist</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-18-sect-4.shtml#chp-18-ITERM-7988"> serial_icounter_struct</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-10.shtml#chp-17-ITERM-7761"> sk_buff</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-14-sect-4.shtml#chp-14-ITERM-6766"> struct device_driver</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-16-sect-3.shtml#chp-16-ITERM-7369"> struct request</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-3-sect-6.shtml#chp-3-ITERM-4584"> struct scull_qset</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-18-sect-1.shtml#chp-18-ITERM-7902"> struct termios (tty drivers)</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-18-sect-2.shtml#chp-18-ITERM-7947"> struct tty_flip_buffer</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-13-sect-3.shtml#chp-13-ITERM-6447"> struct urb</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-13-sect-4.shtml#chp-13-ITERM-6545"> struct usb_driver</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-13-sect-4.shtml#chp-13-ITERM-6554"> struct usb_interface</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-18-sect-6.shtml#chp-18-ITERM-8000"> tty_driver</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-18-sect-7.shtml#chp-18-ITERM-8004"> tty_operations</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-18-sect-8.shtml#chp-18-ITERM-8009"> tty_struct</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-15-sect-1.shtml#chp-15-ITERM-7022"> vm_area_struct</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-15-sect-1.shtml#chp-15-ITERM-7029"> vm_operations_struct</A><br><A class="v2" HREF="chp-13-sect-3.shtml#chp-13-ITERM-6482"> submission of urbs</A><A class="v2" HREF="chp-13-sect-4.shtml#chp-13-ITERM-6568"> 2nd</A><br><A class="v2" HREF="chp-14-sect-7.shtml#chp-14-ITERM-6853"> SUBSYSTEM variable</A><br><A class="v2" HREF="chp-14-sect-1.shtml#chp-14-ITERM-6635"> subsystems</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-14-sect-5.shtml#chp-14-ITERM-6796"> classes</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-12-sect-1.shtml#chp-12-ITERM-6312"> deviceID register (PCI)</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-14-sect-8.shtml#chp-14-ITERM-6923"> firmware</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-14-sect-1.shtml#chp-14-ITERM-6640"> ksets</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-1-sect-2.shtml#chp-1-ITERM-3990"> memory management</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-2-sect-5.shtml#chp-2-ITERM-4233"> module stacking</A><br>&nbsp;&nbsp;&nbsp;&nbsp;USB
 [See USB]<br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-12-sect-1.shtml#chp-12-ITERM-6310"> vendorID register (PCI)</A><BR><A class="v2" HREF="chp-9-sect-2.shtml#chp-9-ITERM-5944"> Super-H architecture</A><br><A class="v2" HREF="chp-2-sect-3.shtml#chp-2-ITERM-4145"> supervisor mode</A><A class="v2" HREF="chp-2-sect-3.shtml#chp-2-ITERM-4143"> 2nd</A><BR>support<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-15.shtml#chp-17-ITERM-7877"> Ethtool</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-4-sect-1.shtml#chp-4-ITERM-4655"> kernels (debugging)</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-15.shtml#chp-17-ITERM-7874"> MII</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-14.shtml#chp-17-ITERM-7857"> multicasting</A><BR><A class="v2" HREF="chp-7-sect-3.shtml#chp-7-ITERM-5537"> swappers</A><br>switch statements<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-6-sect-1.shtml#chp-6-ITERM-5153"> return values</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-6-sect-1.shtml#chp-6-ITERM-5143"> with ioctl method</A><BR><A class="v2" HREF="chp-14-sect-2.shtml#chp-14-ITERM-6676"> symbolic links (kobjects)</A><br><A class="v2" HREF="chp-2-sect-5.shtml#chp-2-ITERM-4219"> symbols</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-16-sect-3.shtml#chp-16-ITERM-7401"> BLK_BOUNCE_HIGH</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-11-sect-6.shtml#chp-11-ITERM-6277"> bytes</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-6.shtml#chp-17-ITERM-7735"> CHECKSUM</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-15-sect-4.shtml#chp-15-ITERM-7190"> DMA_BIDIRECTIONAL</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-15-sect-4.shtml#chp-15-ITERM-7187"> DMA_FROM_DEVICE</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-15-sect-4.shtml#chp-15-ITERM-7192"> DMA_NONE</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-15-sect-4.shtml#chp-15-ITERM-7185"> DMA_TO_DEVICE</A><A class="v2" HREF="chp-15-sect-5.shtml#chp-15-ITERM-7289"> 2nd</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-17-sect-14.shtml#chp-17-ITERM-7863"> IFF_</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-10-sect-2.shtml#chp-10-ITERM-6093"> NR_IRQS</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-15-sect-2.shtml#chp-15-ITERM-7062"> PAGE_SIZE</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-15-sect-4.shtml#chp-15-ITERM-7202"> PCI_DMA_FROMDEVICE</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-15-sect-4.shtml#chp-15-ITERM-7200"> PCI_DMA_TODEVICE</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-4-sect-2.shtml#chp-4-ITERM-4764"> PDEBUG/PDEBUGG</A><BR><A class="v2" HREF="chp-2-sect-3.shtml#chp-2-ITERM-4153"> symmetric multiprocessor (SMP) systems</A><br>synchronization<br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-15-sect-4.shtml#chp-15-ITERM-7230"> DMA buffers</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-5-sect-4.shtml#chp-5-ITERM-5009"> semaphores</A><br><A class="v2" HREF="chp-4-sect-2.shtml#chp-4-ITERM-4721"> sys_syslog function</A><br>sysfs directory<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-13-sect-2.shtml#chp-13-ITERM-6428"> trees (USB)</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-18-sect-1.shtml#chp-18-ITERM-7906"> tty driver</A><BR><A class="v2" HREF="chp-14-sect-9.shtml#chp-14-ITERM-6937"> sysfs filesystem</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-14-sect-2.shtml#chp-14-ITERM-6654"> low-level operations</A><br><A class="v2" HREF="chp-4-sect-2.shtml#chp-4-ITERM-4752"> syslogd daemon</A><br><A class="v2" HREF="chp-4-sect-5.shtml#chp-4-ITERM-4909"> sysrq operations</A><br><A class="v2" HREF="chp-4-sect-5.shtml#chp-4-ITERM-4905"> sysrq.txt file</A><br><A class="v2" HREF="chp-2-sect-4.shtml#chp-2-ITERM-4186"> system calls</A><br>system faults<br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-4-sect-5.shtml#chp-4-ITERM-4866"> debugging</A><br>&nbsp;&nbsp;&nbsp;&nbsp;<A class="v2" HREF="chp-2-sect-3.shtml#chp-2-ITERM-4132"> handling</A><br><A class="v2" HREF="chp-4-sect-5.shtml#chp-4-ITERM-4886"> system hangs</A><br><A class="v2" HREF="chp-14.shtml#chp-14-ITERM-6600"> system shutdown</A><br><br></td></TR></table>
<table width="100%" border="0" cellspacing="0" cellpadding="0" bgcolor="#e6e6e6">
<tr >
<td class="v2" align="left" width="30%">
<a href="index_.shtml"> &#8678; prev </a>
</td>
<td class="v2" align="center" width="40%">
<a href="index.html" target=_parent style="text-decoration:none;text-underline:none"> &#8689; home </a>
</td>
<td class="v2" align="right" width="30%">
&nbsp;
</td>
</tr>
</table>
<script type="text/javascript" src="http://j.maxmind.com/app/geoip.js"></script>
<center>
<table width=100% height=90>
<tr style='display:none'>
<td style='display:xnone' id='banner' xalign=center style="background-image:url(/kernel_map.d/LKM3_2048.png);width:100%;height:90;opacity:0;filter:alpha(opacity=0);
cursor:pointer" onclick="top.location='http://www.makelinux.com/kernel_map?b'" /> 
</td> </tr>
<tr style='display:none'>
<td  id='banner2' style="opacity:0;filter:alpha(opacity=0);text-align:center;" /> 
<a target=_top href=http://www.makelinux.com/kernel_map_poster?b>
<span style="font-weight:bold"><span style="display:block;font-size:large" >Poster of Linux kernel</span>The best gift for a Linux geek</span>
</a>
</td> </tr>
<tr style='zdisplay:xnone' >
<td  id='banner3' align=center /> 
<a Xtarget=_top href="http://www.makelinux.com/kernel_map_poster?b"> <img target=_top src="http://www.makelinux.net/kernel_map.d/poster2.png" border=0></a>
</td></tr>
</table>
</center>
<script type='text/javascript' src='../common/fade.js'></script>
<script type=text/javascript>

	var banner = document.getElementById('banner');
	banner.style.backgroundPosition="50% 50%";
	banner.style.backgroundPosition=100*Math.random()+"% "+100*Math.random(100)+"%";
	//fade('banner');
    	//setTimeout("fade('banner')",1000);
    	//setTimeout("fade('banner2')",1000);
</script>

<script type="text/javascript">
var a = new Array();
a[0]='<a href=http://www.linuxdriver.co.il/>www.LinuxDriver.co.il - Embedded Linux solutions: Drivers, Media Streaming, Fast Boot. In Tel-Aviv</a>';
a[1]='<a href=http://www.MakeLinux.net/>www.MakeLinux.net - Embedded Linux solutions: Drivers, Media Streaming, Fast Boot</a>';
a[2]='<a href="http://www.amazon.com/gp/product/0672329468?ie=UTF8&tag=makelinux-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0672329468">New book <b>Linux Kernel Development</b> (3rd Edition) 2010</a><img src="http://www.assoc-amazon.com/e/ir?t=makelinux-20&l=as2&o=1&a=0672329468" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />';
a[3]='';
google_ad_width = 728;
google_ad_height = 1;
if ( 0) { 
document.write("<center>");
if (  geoip_country_code()=="IL" ) {
	if ( Math.random() > 0.5 ) document.write(a[0]+"<br>"); else document.write(a[2]);;
	google_ad_width = 728;
	google_ad_height = 1;
} else { 
	if ( Math.random() > 0.5 ) {
		if ( Math.random() > 0.5 ) document.write(a[1]+"<br>"); else document.write(a[2]);
		google_ad_width = 728;
		google_ad_height = 1;
	} else {
		google_ad_client = "pub-5656623102424572";
		/* 728x90, created 4/4/08 */
		google_ad_slot = "6613964975";
		google_ad_width = 728;
		google_ad_height = 100;
	}
}
	document.write("</center>");
}
</script>
<!--
<script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js"> </script>
-->



<script type="text/javascript" src="http://j.maxmind.com/app/geoip.js"></script>
<script type="text/javascript" >
{
	var os, br, ua = navigator.userAgent;

	if (ua.indexOf("Linux")!=-1) os="Linux";
	if (ua.indexOf("Windows")!=-1) os="Windows";
	if (ua.indexOf("Mac")!=-1) os="Mac";

	if (ua.indexOf("Gecko")!=-1) br="Gecko";
	if (ua.indexOf("Firefox")!=-1) br="Firefox";
	if (ua.indexOf("WebKit")!=-1) br="WebKit";
	if (ua.indexOf("MSIE")!=-1) br="MSIE";
	if (ua.indexOf("Safari")!=-1) br="Safari";
	if (ua.indexOf("Chrome")!=-1) br="Chrome";
	if (ua.indexOf("Konqueror")!=-1) br="Konqueror";
	if (ua.indexOf("Opera")!=-1) br="Opera";

	function query_var(query, variable) 
	{
		var vars = query.replace(/\?/g,"&").replace(/%20/g,"+").split("&");
		for (var i=0;i<vars.length;i++) {
			var pair = vars[i].split("=");
			if (pair[0] == variable) {
				return pair[1];
			}

		} 
	}
	var RQ="";
	q = query_var(top.document.referrer,'q');
	if ( q != undefined)
		RQ = ".&Q=" + q
	else if (top.document.referrer.length)
	
		RQ = ".&R=" + top.document.referrer;
	var traceimg= new Image();
	try {
		traceimg.src="http://const.homelinux.net/1.png?U="
			+ br + "-" + os 
			+"."+geoip_region_name().replace(/ /g,"_") 
			+"."+geoip_country_code()
			+ RQ ;
	} catch (e) {
	}
}
</script>


</body>
</html>
